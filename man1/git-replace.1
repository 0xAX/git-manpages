'\" t
.\"     Title: git-replace
.\"    Author: [see the "Author" section]
.\" Generator: DocBook XSL Stylesheets v1.74.3 <http://docbook.sf.net/>
.\"      Date: 11/15/2009
.\"    Manual: Git Manual
.\"    Source: Git 1.6.5.2.185.gb7fba
.\"  Language: English
.\"
.TH "GIT\-REPLACE" "1" "11/15/2009" "Git 1\&.6\&.5\&.2\&.185\&.gb7f" "Git Manual"
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
git-replace \- Create, list, delete refs to replace objects
.SH "SYNOPSIS"
.sp
.nf
\fIgit replace\fR [\-f] <object> <replacement>
\fIgit replace\fR \-d <object>\&...
\fIgit replace\fR \-l [<pattern>]
.fi
.sp
.SH "DESCRIPTION"
.sp
Adds a \fIreplace\fR reference in \&.git/refs/replace/
.sp
The name of the \fIreplace\fR reference is the SHA1 of the object that is replaced\&. The content of the replace reference is the SHA1 of the replacement object\&.
.sp
Unless \-f is given, the replace reference must not yet exist in \&.git/refs/replace/ directory\&.
.sp
Replace references will be used by default by all git commands except those doing reachability traversal (prune, pack transfer and fsck)\&.
.sp
It is possible to disable use of replacement refs for any command using the \-\-no\-replace\-objects option just after "git"\&.
.sp
For example if commit "foo" has been replaced by commit "bar":
.sp
.if n \{\
.RS 4
.\}
.nf
$ git \-\-no\-replace\-object cat\-file commit foo
.fi
.if n \{\
.RE
.\}
.sp
.sp
show information about commit "foo", while:
.sp
.if n \{\
.RS 4
.\}
.nf
$ git cat\-file commit foo
.fi
.if n \{\
.RE
.\}
.sp
.sp
show information about commit "bar"\&.
.SH "OPTIONS"
.PP
\-f
.RS 4
If an existing replace ref for the same object exists, it will be overwritten (instead of failing)\&.
.RE
.PP
\-d
.RS 4
Delete existing replace refs for the given objects\&.
.RE
.PP
\-l <pattern>
.RS 4
List replace refs for objects that match the given pattern (or all if no pattern is given)\&. Typing "git replace" without arguments, also lists all replace refs\&.
.RE
.SH "BUGS"
.sp
Comparing blobs or trees that have been replaced with those that replace them will not work properly\&. And using \fIgit reset \-\-hard\fR to go back to a replaced commit will move the branch to the replacement commit instead of the replaced commit\&.
.sp
There may be other problems when using \fIgit rev\-list\fR related to pending objects\&. And of course things may break if an object of one type is replaced by an object of another type (for example a blob replaced by a commit)\&.
.SH "SEE ALSO"
.sp
\fBgit-tag\fR(1) \fBgit-branch\fR(1) \fBgit\fR(1)
.SH "AUTHOR"
.sp
Written by Christian Couder <chriscool@tuxfamily\&.org> and Junio C Hamano <gitster@pobox\&.com>, based on \fIgit tag\fR by Kristian Hogsberg <krh@redhat\&.com> and Carlos Rica <jasampler@gmail\&.com>\&.
.SH "DOCUMENTATION"
.sp
Documentation by Christian Couder <chriscool@tuxfamily\&.org> and the git\-list <git@vger\&.kernel\&.org>, based on \fIgit tag\fR documentation\&.
.SH "GIT"
.sp
Part of the \fBgit\fR(1) suite
