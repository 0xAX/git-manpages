.\"     Title: git-replace
.\"    Author: 
.\" Generator: DocBook XSL Stylesheets v1.73.2 <http://docbook.sf.net/>
.\"      Date: 10/19/2009
.\"    Manual: Git Manual
.\"    Source: Git 1.6.5.1.61.ge79999
.\"
.TH "GIT\-REPLACE" "1" "10/19/2009" "Git 1\.6\.5\.1\.61\.ge79999" "Git Manual"
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.SH "NAME"
git-replace - Create, list, delete refs to replace objects
.SH "SYNOPSIS"
.sp
.RS 4
.nf
\fIgit replace\fR [\-f] <object> <replacement>
\fIgit replace\fR \-d <object>\&...
\fIgit replace\fR \-l [<pattern>]
.fi
.RE
.SH "DESCRIPTION"
Adds a \fIreplace\fR reference in \.git/refs/replace/
.sp
The name of the \fIreplace\fR reference is the SHA1 of the object that is replaced\. The content of the replace reference is the SHA1 of the replacement object\.
.sp
Unless \-f is given, the replace reference must not yet exist in \.git/refs/replace/ directory\.
.sp
Replace references will be used by default by all git commands except those doing reachability traversal (prune, pack transfer and fsck)\.
.sp
It is possible to disable use of replacement refs for any command using the \-\-no\-replace\-objects option just after "git"\.
.sp
For example if commit "foo" has been replaced by commit "bar":
.sp
.sp
.RS 4
.nf

\.ft C
$ git \-\-no\-replace\-object cat\-file commit foo
\.ft

.fi
.RE
show information about commit "foo", while:
.sp
.sp
.RS 4
.nf

\.ft C
$ git cat\-file commit foo
\.ft

.fi
.RE
show information about commit "bar"\.
.sp
.SH "OPTIONS"
.PP
\-f
.RS 4
If an existing replace ref for the same object exists, it will be overwritten (instead of failing)\.
.RE
.PP
\-d
.RS 4
Delete existing replace refs for the given objects\.
.RE
.PP
\-l <pattern>
.RS 4
List replace refs for objects that match the given pattern (or all if no pattern is given)\. Typing "git replace" without arguments, also lists all replace refs\.
.RE
.SH "BUGS"
Comparing blobs or trees that have been replaced with those that replace them will not work properly\. And using \fIgit reset \-\-hard\fR to go back to a replaced commit will move the branch to the replacement commit instead of the replaced commit\.
.sp
There may be other problems when using \fIgit rev\-list\fR related to pending objects\. And of course things may break if an object of one type is replaced by an object of another type (for example a blob replaced by a commit)\.
.sp
.SH "SEE ALSO"
\fBgit-tag\fR(1) \fBgit-branch\fR(1) \fBgit\fR(1)
.sp
.SH "AUTHOR"
Written by Christian Couder <chriscool@tuxfamily\.org> and Junio C Hamano <gitster@pobox\.com>, based on \fIgit tag\fR by Kristian Hogsberg <krh@redhat\.com> and Carlos Rica <jasampler@gmail\.com>\.
.sp
.SH "DOCUMENTATION"
Documentation by Christian Couder <chriscool@tuxfamily\.org> and the git\-list <git@vger\.kernel\.org>, based on \fIgit tag\fR documentation\.
.sp
.SH "GIT"
Part of the \fBgit\fR(1) suite
.sp
