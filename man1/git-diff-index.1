.\"     Title: git-diff-index
.\"    Author: 
.\" Generator: DocBook XSL Stylesheets v1.73.2 <http://docbook.sf.net/>
.\"      Date: 10/31/2008
.\"    Manual: Git Manual
.\"    Source: Git 1.6.0.2.554.g3041b
.\"
.TH "GIT\-DIFF\-INDEX" "1" "10/31/2008" "Git 1\.6\.0\.2\.554\.g3041b" "Git Manual"
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.SH "NAME"
git-diff-index - Compares content and mode of blobs between the index and repository
.SH "SYNOPSIS"
\fIgit diff\-index\fR [\-m] [\-\-cached] [<common diff options>] <tree\-ish> [<path>\&...]
.SH "DESCRIPTION"
Compares the content and mode of the blobs found via a tree object with the content of the current index and, optionally ignoring the stat state of the file on disk\. When paths are specified, compares only those named paths\. Otherwise all entries in the index are compared\.
.SH "OPTIONS"
.PP
\-p
.RS 4
Generate patch (see section on generating patches)\.
.RE
.PP
\-u
.RS 4
Synonym for "\-p"\.
.RE
.PP
\-U<n>
.RS 4
Shorthand for "\-\-unified=<n>"\.
.RE
.PP
\-\-unified=<n>
.RS 4
Generate diffs with <n> lines of context instead of the usual three\. Implies "\-p"\.
.RE
.PP
\-\-raw
.RS 4
Generate the raw format\. This is the default\.
.RE
.PP
\-\-patch\-with\-raw
.RS 4
Synonym for "\-p \-\-raw"\.
.RE
.PP
\-\-stat[=width[,name\-width]]
.RS 4
Generate a diffstat\. You can override the default output width for 80\-column terminal by "\-\-stat=width"\. The width of the filename part can be controlled by giving another width to it separated by a comma\.
.RE
.PP
\-\-numstat
.RS 4
Similar to \-\-stat, but shows number of added and deleted lines in decimal notation and pathname without abbreviation, to make it more machine friendly\. For binary files, outputs two \- instead of saying 0 0\.
.RE
.PP
\-\-shortstat
.RS 4
Output only the last line of the \-\-stat format containing total number of modified files, as well as number of added and deleted lines\.
.RE
.PP
\-\-dirstat[=limit]
.RS 4
Output the distribution of relative amount of changes (number of lines added or removed) for each sub\-directory\. Directories with changes below a cut\-off percent (3% by default) are not shown\. The cut\-off percent can be set with "\-\-dirstat=limit"\. Changes in a child directory is not counted for the parent directory, unless "\-\-cumulative" is used\.
.RE
.PP
\-\-dirstat\-by\-file[=limit]
.RS 4
Same as \-\-dirstat, but counts changed files instead of lines\.
.RE
.PP
\-\-summary
.RS 4
Output a condensed summary of extended header information such as creations, renames and mode changes\.
.RE
.PP
\-\-patch\-with\-stat
.RS 4
Synonym for "\-p \-\-stat"\.
.RE
.PP
\-z
.RS 4
NUL\-line termination on output\. This affects the \-\-raw output field terminator\. Also output from commands such as "git\-log" will be delimited with NUL between commits\.
.RE
.PP
\-\-name\-only
.RS 4
Show only names of changed files\.
.RE
.PP
\-\-name\-status
.RS 4
Show only names and status of changed files\. See the description of the \-\-diff\-filter option on what the status letters mean\.
.RE
.PP
\-\-color
.RS 4
Show colored diff\.
.RE
.PP
\-\-no\-color
.RS 4
Turn off colored diff, even when the configuration file gives the default to color output\.
.RE
.PP
\-\-color\-words
.RS 4
Show colored word diff, i\.e\. color words which have changed\.
.RE
.PP
\-\-no\-renames
.RS 4
Turn off rename detection, even when the configuration file gives the default to do so\.
.RE
.PP
\-\-check
.RS 4
Warn if changes introduce trailing whitespace or an indent that uses a space before a tab\. Exits with non\-zero status if problems are found\. Not compatible with \-\-exit\-code\.
.RE
.PP
\-\-full\-index
.RS 4
Instead of the first handful of characters, show the full pre\- and post\-image blob object names on the "index" line when generating patch format output\.
.RE
.PP
\-\-binary
.RS 4
In addition to \-\-full\-index, output "binary diff" that can be applied with "git apply"\.
.RE
.PP
\-\-abbrev[=<n>]
.RS 4
Instead of showing the full 40\-byte hexadecimal object name in diff\-raw format output and diff\-tree header lines, show only handful hexdigits prefix\. This is independent of \-\-full\-index option above, which controls the diff\-patch output format\. Non default number of digits can be specified with \-\-abbrev=<n>\.
.RE
.PP
\-B
.RS 4
Break complete rewrite changes into pairs of delete and create\.
.RE
.PP
\-M
.RS 4
Detect renames\.
.RE
.PP
\-C
.RS 4
Detect copies as well as renames\. See also \-\-find\-copies\-harder\.
.RE
.PP
\-\-diff\-filter=[ACDMRTUXB*]
.RS 4
Select only files that are Added (A), Copied (C), Deleted (D), Modified (M), Renamed (R), have their type (i\.e\. regular file, symlink, submodule, \&...) changed (T), are Unmerged (U), are Unknown (X), or have had their pairing Broken (B)\. Any combination of the filter characters may be used\. When * (All\-or\-none) is added to the combination, all paths are selected if there is any file that matches other criteria in the comparison; if there is no file that matches other criteria, nothing is selected\.
.RE
.PP
\-\-find\-copies\-harder
.RS 4
For performance reasons, by default, \-C option finds copies only if the original file of the copy was modified in the same changeset\. This flag makes the command inspect unmodified files as candidates for the source of copy\. This is a very expensive operation for large projects, so use it with caution\. Giving more than one \-C option has the same effect\.
.RE
.PP
\-l<num>
.RS 4
\-M and \-C options require O(n^2) processing time where n is the number of potential rename/copy targets\. This option prevents rename/copy detection from running if the number of rename/copy targets exceeds the specified number\.
.RE
.PP
\-S<string>
.RS 4
Look for differences that contain the change in <string>\.
.RE
.PP
\-\-pickaxe\-all
.RS 4
When \-S finds a change, show all the changes in that changeset, not just the files that contain the change in <string>\.
.RE
.PP
\-\-pickaxe\-regex
.RS 4
Make the <string> not a plain string but an extended POSIX regex to match\.
.RE
.PP
\-O<orderfile>
.RS 4
Output the patch in the order specified in the <orderfile>, which has one shell glob pattern per line\.
.RE
.PP
\-R
.RS 4
Swap two inputs; that is, show differences from index or on\-disk file to tree contents\.
.RE
.PP
\-\-relative[=<path>]
.RS 4
When run from a subdirectory of the project, it can be told to exclude changes outside the directory and show pathnames relative to it with this option\. When you are not in a subdirectory (e\.g\. in a bare repository), you can name which subdirectory to make the output relative to by giving a <path> as an argument\.
.RE
.PP
\-\-text
.RS 4
Treat all files as text\.
.RE
.PP
\-a
.RS 4
Shorthand for "\-\-text"\.
.RE
.PP
\-\-ignore\-space\-at\-eol
.RS 4
Ignore changes in whitespace at EOL\.
.RE
.PP
\-\-ignore\-space\-change
.RS 4
Ignore changes in amount of whitespace\. This ignores whitespace at line end, and considers all other sequences of one or more whitespace characters to be equivalent\.
.RE
.PP
\-b
.RS 4
Shorthand for "\-\-ignore\-space\-change"\.
.RE
.PP
\-\-ignore\-all\-space
.RS 4
Ignore whitespace when comparing lines\. This ignores differences even if one line has whitespace where the other line has none\.
.RE
.PP
\-w
.RS 4
Shorthand for "\-\-ignore\-all\-space"\.
.RE
.PP
\-\-exit\-code
.RS 4
Make the program exit with codes similar to diff(1)\. That is, it exits with 1 if there were differences and 0 means no differences\.
.RE
.PP
\-\-quiet
.RS 4
Disable all output of the program\. Implies \-\-exit\-code\.
.RE
.PP
\-\-ext\-diff
.RS 4
Allow an external diff helper to be executed\. If you set an external diff driver with \fBgitattributes\fR(5), you need to use this option with \fBgit-log\fR(1) and friends\.
.RE
.PP
\-\-no\-ext\-diff
.RS 4
Disallow external diff drivers\.
.RE
.PP
\-\-ignore\-submodules
.RS 4
Ignore changes to submodules in the diff generation\.
.RE
.PP
\-\-src\-prefix=<prefix>
.RS 4
Show the given source prefix instead of "a/"\.
.RE
.PP
\-\-dst\-prefix=<prefix>
.RS 4
Show the given destination prefix instead of "b/"\.
.RE
.PP
\-\-no\-prefix
.RS 4
Do not show any source or destination prefix\.
.RE
For more detailed explanation on these common options, see also \fBgitdiffcore\fR(7)\.
.PP
<tree\-ish>
.RS 4
The id of a tree object to diff against\.
.RE
.PP
\-\-cached
.RS 4
do not consider the on\-disk file at all
.RE
.PP
\-m
.RS 4
By default, files recorded in the index but not checked out are reported as deleted\. This flag makes \fIgit\-diff\-index\fR say that all non\-checked\-out files are up to date\.
.RE
.SH "OUTPUT FORMAT"
The output format from "git\-diff\-index", "git\-diff\-tree", "git\-diff\-files" and "git diff \-\-raw" are very similar\.

These commands all compare two sets of things; what is compared differs:
.PP
git\-diff\-index <tree\-ish>
.RS 4
compares the <tree\-ish> and the files on the filesystem\.
.RE
.PP
git\-diff\-index \-\-cached <tree\-ish>
.RS 4
compares the <tree\-ish> and the index\.
.RE
.PP
git\-diff\-tree [\-r] <tree\-ish\-1> <tree\-ish\-2> [<pattern>\&...]
.RS 4
compares the trees named by the two arguments\.
.RE
.PP
git\-diff\-files [<pattern>\&...]
.RS 4
compares the index and the files on the filesystem\.
.RE
An output line is formatted this way:

.sp
.RS 4
.nf

\.ft C
in\-place edit  :100644 100644 bcd1234\.\.\. 0123456\.\.\. M file0
copy\-edit      :100644 100644 abcd123\.\.\. 1234567\.\.\. C68 file1 file2
rename\-edit    :100644 100644 abcd123\.\.\. 1234567\.\.\. R86 file1 file3
create         :000000 100644 0000000\.\.\. 1234567\.\.\. A file4
delete         :100644 000000 1234567\.\.\. 0000000\.\.\. D file5
unmerged       :000000 000000 0000000\.\.\. 0000000\.\.\. U file6
\.ft

.fi
.RE
That is, from the left to the right:

.sp
.RS 4
\h'-04' 1.\h'+02'a colon\.
.RE
.sp
.RS 4
\h'-04' 2.\h'+02'mode for "src"; 000000 if creation or unmerged\.
.RE
.sp
.RS 4
\h'-04' 3.\h'+02'a space\.
.RE
.sp
.RS 4
\h'-04' 4.\h'+02'mode for "dst"; 000000 if deletion or unmerged\.
.RE
.sp
.RS 4
\h'-04' 5.\h'+02'a space\.
.RE
.sp
.RS 4
\h'-04' 6.\h'+02'sha1 for "src"; 0{40} if creation or unmerged\.
.RE
.sp
.RS 4
\h'-04' 7.\h'+02'a space\.
.RE
.sp
.RS 4
\h'-04' 8.\h'+02'sha1 for "dst"; 0{40} if creation, unmerged or "look at work tree"\.
.RE
.sp
.RS 4
\h'-04' 9.\h'+02'a space\.
.RE
.sp
.RS 4
\h'-04'10.\h'+02'status, followed by optional "score" number\.
.RE
.sp
.RS 4
\h'-04'11.\h'+02'a tab or a NUL when \fI\-z\fR option is used\.
.RE
.sp
.RS 4
\h'-04'12.\h'+02'path for "src"
.RE
.sp
.RS 4
\h'-04'13.\h'+02'a tab or a NUL when \fI\-z\fR option is used; only exists for C or R\.
.RE
.sp
.RS 4
\h'-04'14.\h'+02'path for "dst"; only exists for C or R\.
.RE
.sp
.RS 4
\h'-04'15.\h'+02'an LF or a NUL when \fI\-z\fR option is used, to terminate the record\.
.RE
<sha1> is shown as all 0\'s if a file is new on the filesystem and it is out of sync with the index\.

Example:

.sp
.RS 4
.nf

\.ft C
:100644 100644 5be4a4\.\.\.\.\.\. 000000\.\.\.\.\.\. M file\.c
\.ft

.fi
.RE
When \-z option is not used, TAB, LF, and backslash characters in pathnames are represented as \et, \en, and \e\e, respectively\.
.SH "DIFF FORMAT FOR MERGES"
"git\-diff\-tree", "git\-diff\-files" and "git\-diff \-\-raw" can take \fI\-c\fR or \fI\-\-cc\fR option to generate diff output also for merge commits\. The output differs from the format described above in the following way:

.sp
.RS 4
\h'-04' 1.\h'+02'there is a colon for each parent
.RE
.sp
.RS 4
\h'-04' 2.\h'+02'there are more "src" modes and "src" sha1
.RE
.sp
.RS 4
\h'-04' 3.\h'+02'status is concatenated status characters for each parent
.RE
.sp
.RS 4
\h'-04' 4.\h'+02'no optional "score" number
.RE
.sp
.RS 4
\h'-04' 5.\h'+02'single path, only for "dst"
.RE
Example:

.sp
.RS 4
.nf

\.ft C
::100644 100644 100644 fabadb8\.\.\. cc95eb0\.\.\. 4866510\.\.\. MM      describe\.c
\.ft

.fi
.RE
Note that \fIcombined diff\fR lists only files which were modified from all parents\.
.SH "GENERATING PATCHES WITH -P"
When "git\-diff\-index", "git\-diff\-tree", or "git\-diff\-files" are run with a \fI\-p\fR option, "git diff" without the \fI\-\-raw\fR option, or "git log" with the "\-p" option, they do not produce the output described above; instead they produce a patch file\. You can customize the creation of such patches via the GIT_EXTERNAL_DIFF and the GIT_DIFF_OPTS environment variables\.

What the \-p option produces is slightly different from the traditional diff format\.

.sp
.RS 4
\h'-04' 1.\h'+02'It is preceded with a "git diff" header, that looks like this:

.sp
.RS 4
.nf
diff \-\-git a/file1 b/file2
.fi
.RE
The a/ and b/ filenames are the same unless rename/copy is involved\. Especially, even for a creation or a deletion, /dev/null is _not_ used in place of a/ or b/ filenames\.

When rename/copy is involved, file1 and file2 show the name of the source file of the rename/copy and the name of the file that rename/copy produces, respectively\.
.RE
.sp
.RS 4
\h'-04' 2.\h'+02'It is followed by one or more extended header lines:

.sp
.RS 4
.nf
old mode <mode>
new mode <mode>
deleted file mode <mode>
new file mode <mode>
copy from <path>
copy to <path>
rename from <path>
rename to <path>
similarity index <number>
dissimilarity index <number>
index <hash>\.\.<hash> <mode>
.fi
.RE
.RE
.sp
.RS 4
\h'-04' 3.\h'+02'TAB, LF, double quote and backslash characters in pathnames are represented as \et, \en, \e" and \e\e, respectively\. If there is need for such substitution then the whole pathname is put in double quotes\.
.RE
The similarity index is the percentage of unchanged lines, and the dissimilarity index is the percentage of changed lines\. It is a rounded down integer, followed by a percent sign\. The similarity index value of 100% is thus reserved for two equal files, while 100% dissimilarity means that no line from the old file made it into the new one\.
.SH "COMBINED DIFF FORMAT"
"git\-diff\-tree", "git\-diff\-files" and "git\-diff" can take \fI\-c\fR or \fI\-\-cc\fR option to produce \fIcombined diff\fR\. For showing a merge commit with "git log \-p", this is the default format\. A \fIcombined diff\fR format looks like this:

.sp
.RS 4
.nf

\.ft C
diff \-\-combined describe\.c
index fabadb8,cc95eb0\.\.4866510
\-\-\- a/describe\.c
+++ b/describe\.c
@@@ \-98,20 \-98,12 +98,20 @@@
        return (a_date > b_date) ? \-1 : (a_date == b_date) ? 0 : 1;
  }

\- static void describe(char *arg)
 \-static void describe(struct commit *cmit, int last_one)
++static void describe(char *arg, int last_one)
  {
 +      unsigned char sha1[20];
 +      struct commit *cmit;
        struct commit_list *list;
        static int initialized = 0;
        struct commit_name *n;

 +      if (get_sha1(arg, sha1) < 0)
 +              usage(describe_usage);
 +      cmit = lookup_commit_reference(sha1);
 +      if (!cmit)
 +              usage(describe_usage);
 +
        if (!initialized) {
                initialized = 1;
                for_each_ref(get_name);
\.ft

.fi
.RE
.sp
.RS 4
\h'-04' 1.\h'+02'It is preceded with a "git diff" header, that looks like this (when \fI\-c\fR option is used):

.sp
.RS 4
.nf
diff \-\-combined file
.fi
.RE
or like this (when \fI\-\-cc\fR option is used):

.sp
.RS 4
.nf
diff \-\-cc file
.fi
.RE
.RE
.sp
.RS 4
\h'-04' 2.\h'+02'It is followed by one or more extended header lines (this example shows a merge with two parents):

.sp
.RS 4
.nf
index <hash>,<hash>\.\.<hash>
mode <mode>,<mode>\.\.<mode>
new file mode <mode>
deleted file mode <mode>,<mode>
.fi
.RE
The mode <mode>,<mode>\.\.<mode> line appears only if at least one of the <mode> is different from the rest\. Extended headers with information about detected contents movement (renames and copying detection) are designed to work with diff of two <tree\-ish> and are not used by combined diff format\.
.RE
.sp
.RS 4
\h'-04' 3.\h'+02'It is followed by two\-line from\-file/to\-file header

.sp
.RS 4
.nf
\-\-\- a/file
+++ b/file
.fi
.RE
Similar to two\-line header for traditional \fIunified\fR diff format, /dev/null is used to signal created or deleted files\.
.RE
.sp
.RS 4
\h'-04' 4.\h'+02'Chunk header format is modified to prevent people from accidentally feeding it to patch \-p1\. Combined diff format was created for review of merge commit changes, and was not meant for apply\. The change is similar to the change in the extended \fIindex\fR header:

.sp
.RS 4
.nf
@@@ <from\-file\-range> <from\-file\-range> <to\-file\-range> @@@
.fi
.RE
There are (number of parents + 1) @ characters in the chunk header for combined diff format\.
.RE
Unlike the traditional \fIunified\fR diff format, which shows two files A and B with a single column that has \- (minus \(em appears in A but removed in B), + (plus \(em missing in A but added to B), or " " (space \(em unchanged) prefix, this format compares two or more files file1, file2,\&... with one file X, and shows how X differs from each of fileN\. One column for each of fileN is prepended to the output line to note how X\'s line is different from it\.

A \- character in the column N means that the line appears in fileN but it does not appear in the result\. A + character in the column N means that the line appears in the last file, and fileN does not have that line (in other words, the line was added, from the point of view of that parent)\.

In the above example output, the function signature was changed from both files (hence two \- removals from both file1 and file2, plus ++ to mean one line that was added does not appear in either file1 nor file2)\. Also two other lines are the same from file1 but do not appear in file2 (hence prefixed with +)\.

When shown by git diff\-tree \-c, it compares the parents of a merge commit with the merge result (i\.e\. file1\.\.fileN are the parents)\. When shown by git diff\-files \-c, it compares the two unresolved merge parents with the working tree file (i\.e\. file1 is stage 2 aka "our version", file2 is stage 3 aka "their version")\.
.SH "OTHER DIFF FORMATS"
The \-\-summary option describes newly added, deleted, renamed and copied files\. The \-\-stat option adds diffstat(1) graph to the output\. These options can be combined with other options, such as \-p, and are meant for human consumption\.

When showing a change that involves a rename or a copy, \-\-stat output formats the pathnames compactly by combining common prefix and suffix of the pathnames\. For example, a change that moves arch/i386/Makefile to arch/x86/Makefile while modifying 4 lines will be shown like this:

.sp
.RS 4
.nf

\.ft C
arch/{i386 => x86}/Makefile    |   4 +\-\-
\.ft

.fi
.RE
The \-\-numstat option gives the diffstat(1) information but is designed for easier machine consumption\. An entry in \-\-numstat output looks like this:

.sp
.RS 4
.nf

\.ft C
1       2       README
3       1       arch/{i386 => x86}/Makefile
\.ft

.fi
.RE
That is, from left to right:

.sp
.RS 4
\h'-04' 1.\h'+02'the number of added lines;
.RE
.sp
.RS 4
\h'-04' 2.\h'+02'a tab;
.RE
.sp
.RS 4
\h'-04' 3.\h'+02'the number of deleted lines;
.RE
.sp
.RS 4
\h'-04' 4.\h'+02'a tab;
.RE
.sp
.RS 4
\h'-04' 5.\h'+02'pathname (possibly with rename/copy information);
.RE
.sp
.RS 4
\h'-04' 6.\h'+02'a newline\.
.RE
When \-z output option is in effect, the output is formatted this way:

.sp
.RS 4
.nf

\.ft C
1       2       README NUL
3       1       NUL arch/i386/Makefile NUL arch/x86/Makefile NUL
\.ft

.fi
.RE
That is:

.sp
.RS 4
\h'-04' 1.\h'+02'the number of added lines;
.RE
.sp
.RS 4
\h'-04' 2.\h'+02'a tab;
.RE
.sp
.RS 4
\h'-04' 3.\h'+02'the number of deleted lines;
.RE
.sp
.RS 4
\h'-04' 4.\h'+02'a tab;
.RE
.sp
.RS 4
\h'-04' 5.\h'+02'a NUL (only exists if renamed/copied);
.RE
.sp
.RS 4
\h'-04' 6.\h'+02'pathname in preimage;
.RE
.sp
.RS 4
\h'-04' 7.\h'+02'a NUL (only exists if renamed/copied);
.RE
.sp
.RS 4
\h'-04' 8.\h'+02'pathname in postimage (only exists if renamed/copied);
.RE
.sp
.RS 4
\h'-04' 9.\h'+02'a NUL\.
.RE
The extra NUL before the preimage path in renamed case is to allow scripts that read the output to tell if the current record being read is a single\-path record or a rename/copy record without reading ahead\. After reading added and deleted lines, reading up to NUL would yield the pathname, but if that is NUL, the record will show two paths\.
.SH "OPERATING MODES"
You can choose whether you want to trust the index file entirely (using the \fI\-\-cached\fR flag) or ask the diff logic to show any files that don\'t match the stat state as being "tentatively changed"\. Both of these operations are very useful indeed\.
.SH "CACHED MODE"
If \fI\-\-cached\fR is specified, it allows you to ask:

.sp
.RS 4
.nf
show me the differences between HEAD and the current index
contents (the ones I\'d write using \'git\-write\-tree\')
.fi
.RE
For example, let\'s say that you have worked on your working directory, updated some files in the index and are ready to commit\. You want to see exactly \fBwhat\fR you are going to commit, without having to write a new tree object and compare it that way, and to do that, you just do

.sp
.RS 4
.nf
git diff\-index \-\-cached HEAD
.fi
.RE
Example: let\'s say I had renamed commit\.c to git\-commit\.c, and I had done an update\-index to make that effective in the index file\. git diff\-files wouldn\'t show anything at all, since the index file matches my working directory\. But doing a \fIgit\-diff\-index\fR does:

.sp
.RS 4
.nf
torvalds@ppc970:~/git> git diff\-index \-\-cached HEAD
\-100644 blob    4161aecc6700a2eb579e842af0b7f22b98443f74        commit\.c
+100644 blob    4161aecc6700a2eb579e842af0b7f22b98443f74        git\-commit\.c
.fi
.RE
You can see easily that the above is a rename\.

In fact, git diff\-index \-\-cached \fBshould\fR always be entirely equivalent to actually doing a \fIgit\-write\-tree\fR and comparing that\. Except this one is much nicer for the case where you just want to check where you are\.

So doing a \fIgit\-diff\-index \-\-cached\fR is basically very useful when you are asking yourself "what have I already marked for being committed, and what\'s the difference to a previous tree"\.
.SH "NON-CACHED MODE"
The "non\-cached" mode takes a different approach, and is potentially the more useful of the two in that what it does can\'t be emulated with a \fIgit\-write\-tree\fR + \fIgit\-diff\-tree\fR\. Thus that\'s the default mode\. The non\-cached version asks the question:

.sp
.RS 4
.nf
show me the differences between HEAD and the currently checked out
tree \- index contents _and_ files that aren\'t up\-to\-date
.fi
.RE
which is obviously a very useful question too, since that tells you what you \fBcould\fR commit\. Again, the output matches the \fIgit\-diff\-tree \-r\fR output to a tee, but with a twist\.

The twist is that if some file doesn\'t match the index, we don\'t have a backing store thing for it, and we use the magic "all\-zero" sha1 to show that\. So let\'s say that you have edited kernel/sched\.c, but have not actually done a \fIgit\-update\-index\fR on it yet \- there is no "object" associated with the new state, and you get:

.sp
.RS 4
.nf
torvalds@ppc970:~/v2\.6/linux> git diff\-index HEAD
*100644\->100664 blob    7476bb\.\.\.\.\.\.\->000000\.\.\.\.\.\.      kernel/sched\.c
.fi
.RE
i\.e\., it shows that the tree has changed, and that kernel/sched\.c has is not up\-to\-date and may contain new stuff\. The all\-zero sha1 means that to get the real diff, you need to look at the object in the working directory directly rather than do an object\-to\-object diff\.
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
Note
As with other commands of this type, \fIgit\-diff\-index\fR does not actually look at the contents of the file at all\. So maybe kernel/sched\.c hasn\'t actually changed, and it\'s just that you touched it\. In either case, it\'s a note that you need to \fIgit\-update\-index\fR it to make the index be in sync\.

.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
Note
You can have a mixture of files show up as "has been updated" and "is still dirty in the working directory" together\. You can always tell which file is in which state, since the "has been updated" ones show a valid sha1, and the "not in sync with the index" ones will always have the special all\-zero sha1\.

.SH "AUTHOR"
Written by Linus Torvalds <torvalds@osdl\.org>
.SH "DOCUMENTATION"
Documentation by David Greaves, Junio C Hamano and the git\-list <git@vger\.kernel\.org>\.
.SH "GIT"
Part of the \fBgit\fR(1) suite

