.\" ** You probably do not want to edit this file directly **
.\" It was generated using the DocBook XSL Stylesheets (version 1.69.1).
.\" Instead of manually editing it, you probably should edit the DocBook XML
.\" source for it and then use the DocBook XSL Stylesheets to regenerate it.
.TH "GIT\-MERGE\-FILE" "1" "04/22/2007" "Git 1.5.1.2.241.gfdd3e" "Git Manual"
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.SH "NAME"
git\-merge\-file \- Run a three\-way file merge
.SH "SYNOPSIS"
.sp
.nf
\fIgit\-merge\-file\fR [\-L <current\-name> [\-L <base\-name> [\-L <other\-name>]]]
        [\-p|\-\-stdout] [\-q|\-\-quiet] <current\-file> <base\-file> <other\-file>
.fi
.SH "DESCRIPTION"
git\-file\-merge incorporates all changes that lead from the <base\-file> to <other\-file> into <current\-file>. The result ordinarily goes into <current\-file>. git\-merge\-file is useful for combining separate changes to an original. Suppose <base\-file> is the original, and both <current\-file> and <other\-file> are modifications of <base\-file>. Then git\-merge\-file combines both changes.

A conflict occurs if both <current\-file> and <other\-file> have changes in a common segment of lines. If a conflict is found, git\-merge\-file normally outputs a warning and brackets the conflict with <<<<<<< and >>>>>>> lines. A typical conflict will look like this:
.sp
.nf
<<<<<<< A
lines in file A
=======
lines in file B
>>>>>>> B
.fi
If there are conflicts, the user should edit the result and delete one of the alternatives.

The exit value of this program is negative on error, and the number of conflicts otherwise. If the merge was clean, the exit value is 0.

git\-merge\-file is designed to be a minimal clone of RCS merge, that is, it implements all of RCS merge's functionality which is needed by \fBgit\fR(1).
.SH "OPTIONS"
.TP
\-L <label>
This option may be given up to three times, and specifies labels to be used in place of the corresponding file names in conflict reports. That is, git\-merge\-file \-L x \-L y \-L z a b c generates output that looks like it came from files x, y and z instead of from files a, b and c.
.TP
\-p
Send results to standard output instead of overwriting <current\-file>.
.TP
\-q
Quiet; do not warn about conflicts.
.SH "EXAMPLES"
.TP
git merge\-file README.my README README.upstream
combines the changes of README.my and README.upstream since README, tries to merge them and writes the result into README.my.
.TP
git merge\-file \-L a \-L b \-L c tmp/a123 tmp/b234 tmp/c345
merges tmp/a123 and tmp/c345 with the base tmp/b234, but uses labels a and c instead of tmp/a123 and tmp/c345.
.SH "AUTHOR"
Written by Johannes Schindelin <johannes.schindelin@gmx.de>
.SH "DOCUMENTATION"
Documentation by Johannes Schindelin and the git\-list <git@vger.kernel.org>, with parts copied from the original documentation of RCS merge.
.SH "GIT"
Part of the \fBgit\fR(7) suite

