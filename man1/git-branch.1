.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "GIT-BRANCH" 1 "" "" ""
.SH NAME
git-branch \- Create a new branch, or remove an old one
.SH "SYNOPSIS"

.nf
\fIgit\-branch\fR [[\-f] <branchname> [<start\-point>]]
\fIgit\-branch\fR (\-d | \-D) <branchname>
.fi

.SH "DESCRIPTION"


If no argument is provided, show available branches and mark current branch with star\&. Otherwise, create a new branch of name <branchname>\&. If a starting point is also specified, that will be where the branch is created, otherwise it will be created at the current HEAD\&.


With a \-d or \-D option, <branchname> will be deleted\&.

.SH "OPTIONS"

.TP
\-d
Delete a branch\&. The branch must be fully merged\&.

.TP
\-D
Delete a branch irrespective of its index status\&.

.TP
\-f
Force a reset of <branchname> to <start\-point> (or current head)\&.

.TP
<branchname>
The name of the branch to create or delete\&.

.TP
<start\-point>
Where to create the branch; defaults to HEAD\&. This option has no meaning with \-d and \-D\&.

.SS "Examples"

.TP
Start development off of a known tag

.nf
$ git clone git://git\&.kernel\&.org/pub/scm/\&.\&.\&./linux\-2\&.6 my2\&.6
$ cd my2\&.6
$ git branch my2\&.6\&.14 v2\&.6\&.14 
$ git checkout my2\&.6\&.14

 These two steps are the same as "checkout \-b my2\&.6\&.14 v2\&.6\&.14"\&.
.fi

.TP
Delete unneeded branch

.nf
$ git clone git://git\&.kernel\&.org/\&.\&.\&./git\&.git my\&.git
$ cd my\&.git
$ git branch \-D todo 

 delete todo branch even if the "master" branch does not have all
commits from todo branch\&.
.fi

.SH "AUTHOR"


Written by Linus Torvalds <torvalds@osdl\&.org> and Junio C Hamano <junkio@cox\&.net>

.SH "DOCUMENTATION"


Documentation by Junio C Hamano and the git\-list <git@vger\&.kernel\&.org>\&.

.SH "GIT"


Part of the \fBgit\fR(7) suite

