.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "GIT-BRANCH" 1 "" "" ""
.SH NAME
git-branch \- List, create, or delete branches.
.SH "SYNOPSIS"

.nf
\fIgit\-branch\fR [\-r]
\fIgit\-branch\fR [\-f] <branchname> [<start\-point>]
\fIgit\-branch\fR (\-d | \-D) <branchname>...
.fi

.SH "DESCRIPTION"


With no arguments given (or just \-r) a list of available branches will be shown, the current branch will be highlighted with an asterisk\&.


In its second form, a new branch named <branchname> will be created\&. It will start out with a head equal to the one given as <start\-point>\&. If no <start\-point> is given, the branch will be created with a head equal to that of the currently checked out branch\&.


With a \-d or \-D option, <branchname> will be deleted\&. You may specify more than one branch for deletion\&.

.SH "OPTIONS"

.TP
\-d
Delete a branch\&. The branch must be fully merged\&.

.TP
\-D
Delete a branch irrespective of its index status\&.

.TP
\-f
Force the creation of a new branch even if it means deleting a branch that already exists with the same name\&.

.TP
\-r
List only the "remote" branches\&.

.TP
<branchname>
The name of the branch to create or delete\&.

.TP
<start\-point>
The new branch will be created with a HEAD equal to this\&. It may be given as a branch name, a commit\-id, or a tag\&. If this option is omitted, the current branch is assumed\&.

.SH "EXAMPLES"

.TP
Start development off of a known tag

.nf
$ git clone git://git\&.kernel\&.org/pub/scm/\&.\&.\&./linux\-2\&.6 my2\&.6
$ cd my2\&.6
$ git branch my2\&.6\&.14 v2\&.6\&.14   \fB(1)\fR
$ git checkout my2\&.6\&.14
.fi
.sp
\fB1. \fRThis step and the next one could be combined into a single step with "checkout \-b my2\&.6\&.14 v2\&.6\&.14"\&.
.br


.TP
Delete unneeded branch

.nf
$ git clone git://git\&.kernel\&.org/\&.\&.\&./git\&.git my\&.git
$ cd my\&.git
$ git branch \-D todo    \fB(1)\fR
.fi
.sp
\fB1. \fRdelete todo branch even if the "master" branch does not have all commits from todo branch\&.
.br


.SH "NOTES"


If you are creating a branch that you want to immediately checkout, it's easier to use the git checkout command with its \-b option to create a branch and check it out with a single command\&.

.SH "AUTHOR"


Written by Linus Torvalds <torvalds@osdl\&.org> and Junio C Hamano <junkio@cox\&.net>

.SH "DOCUMENTATION"


Documentation by Junio C Hamano and the git\-list <git@vger\&.kernel\&.org>\&.

.SH "GIT"


Part of the \fBgit\fR(7) suite

