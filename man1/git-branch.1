.\" ** You probably do not want to edit this file directly **
.\" It was generated using the DocBook XSL Stylesheets (version 1.69.1).
.\" Instead of manually editing it, you probably should edit the DocBook XML
.\" source for it and then use the DocBook XSL Stylesheets to regenerate it.
.TH "GIT\-BRANCH" "1" "11/25/2006" "" ""
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.SH "NAME"
git\-branch \- List, create, or delete branches.
.SH "SYNOPSIS"
.sp
.nf
\fIgit\-branch\fR [\-r] [\-a] [\-v] [\-\-abbrev=<length>]
\fIgit\-branch\fR [\-l] [\-f] <branchname> [<start\-point>]
\fIgit\-branch\fR (\-d | \-D) <branchname>\&...
.fi
.SH "DESCRIPTION"
With no arguments given a list of existing branches will be shown, the current branch will be highlighted with an asterisk. Option \-r causes the remote\-tracking branches to be listed, and option \-a shows both.
.sp
In its second form, a new branch named <branchname> will be created. It will start out with a head equal to the one given as <start\-point>. If no <start\-point> is given, the branch will be created with a head equal to that of the currently checked out branch.
.sp
With a \-d or \-D option, <branchname> will be deleted. You may specify more than one branch for deletion. If the branch currently has a ref log then the ref log will also be deleted.
.sp
.SH "OPTIONS"
.TP
\-d
Delete a branch. The branch must be fully merged.
.TP
\-D
Delete a branch irrespective of its index status.
.TP
\-l
Create the branch's ref log. This activates recording of all changes to made the branch ref, enabling use of date
.TP
\-f
Force the creation of a new branch even if it means deleting a branch that already exists with the same name.
.TP
\-r
List the remote\-tracking branches.
.TP
\-a
List both remote\-tracking branches and local branches.
.TP
\-v
Show sha1 and subject message for each head.
.TP
\-\-abbrev=<length>
Alter minimum display length for sha1 in output listing, default value is 7.
.TP
<branchname>
The name of the branch to create or delete. The new branch name must pass all checks defined by
\fBgit\-check\-ref\-format\fR(1). Some of these checks may restrict the characters allowed in a branch name.
.TP
<start\-point>
The new branch will be created with a HEAD equal to this. It may be given as a branch name, a commit\-id, or a tag. If this option is omitted, the current branch is assumed.
.SH "EXAMPLES"
.TP
Start development off of a known tag
.sp
.nf
$ git clone git://git.kernel.org/pub/scm/.../linux\-2.6 my2.6
$ cd my2.6
$ git branch my2.6.14 v2.6.14   \fB(1)\fR
$ git checkout my2.6.14
.fi
.sp
\fB1. \fRThis step and the next one could be combined into a single step with "checkout \-b my2.6.14 v2.6.14".
.br
.TP
Delete unneeded branch
.sp
.nf
$ git clone git://git.kernel.org/.../git.git my.git
$ cd my.git
$ git branch \-D todo    \fB(1)\fR
.fi
.sp
\fB1. \fRdelete todo branch even if the "master" branch does not have all commits from todo branch.
.br
.SH "NOTES"
If you are creating a branch that you want to immediately checkout, it's easier to use the git checkout command with its \-b option to create a branch and check it out with a single command.
.sp
.SH "AUTHOR"
Written by Linus Torvalds <torvalds@osdl.org> and Junio C Hamano <junkio@cox.net>
.sp
.SH "DOCUMENTATION"
Documentation by Junio C Hamano and the git\-list <git@vger.kernel.org>.
.sp
.SH "GIT"
Part of the \fBgit\fR(7) suite
.sp
