.\" ** You probably do not want to edit this file directly **
.\" It was generated using the DocBook XSL Stylesheets (version 1.69.1).
.\" Instead of manually editing it, you probably should edit the DocBook XML
.\" source for it and then use the DocBook XSL Stylesheets to regenerate it.
.TH "GIT\-TAR\-TREE" "1" "04/22/2007" "Git 1.5.1.2.241.gfdd3e" "Git Manual"
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.SH "NAME"
git\-tar\-tree \- Create a tar archive of the files in the named tree object
.SH "SYNOPSIS"
\fIgit\-tar\-tree\fR [\-\-remote=<repo>] <tree\-ish> [ <base> ]
.SH "DESCRIPTION"
THIS COMMAND IS DEPRECATED. Use git\-archive with \-\-format=tar option instead (and move the <base> argument to \-\-prefix=base/).

Creates a tar archive containing the tree structure for the named tree. When <base> is specified it is added as a leading path to the files in the generated tar archive.

git\-tar\-tree behaves differently when given a tree ID versus when given a commit ID or tag ID. In the first case the current time is used as modification time of each file in the archive. In the latter case the commit time as recorded in the referenced commit object is used instead. Additionally the commit ID is stored in a global extended pax header. It can be extracted using git\-get\-tar\-commit\-id.
.SH "OPTIONS"
.TP
<tree\-ish>
The tree or commit to produce tar archive for. If it is the object name of a commit object.
.TP
<base>
Leading path to the files in the resulting tar archive.
.TP
\-\-remote=<repo>
Instead of making a tar archive from local repository, retrieve a tar archive from a remote repository.
.SH "CONFIGURATION"
By default, file and directories modes are set to 0666 or 0777. It is possible to change this by setting the "umask" variable in the repository configuration as follows :
.sp
.nf
umask = 002     ;# group friendly
.fi
The special umask value "user" indicates that the user's current umask will be used instead. The default value is 002, which means group readable/writable files and directories.
.SH "EXAMPLES"
.TP
git tar\-tree HEAD junk | (cd /var/tmp/ && tar xf \-)
Create a tar archive that contains the contents of the latest commit on the current branch, and extracts it in /var/tmp/junk directory.
.TP
git tar\-tree v1.4.0 git\-1.4.0 | gzip >git\-1.4.0.tar.gz
Create a tarball for v1.4.0 release.
.TP
git tar\-tree v1.4.0^{tree} git\-1.4.0 | gzip >git\-1.4.0.tar.gz
Create a tarball for v1.4.0 release, but without a global extended pax header.
.TP
git tar\-tree \-\-remote=example.com:git.git v1.4.0 >git\-1.4.0.tar
Get a tarball v1.4.0 from example.com.
.TP
git tar\-tree HEAD:Documentation/ git\-docs > git\-1.4.0\-docs.tar
Put everything in the current head's Documentation/ directory into \fIgit\-1.4.0\-docs.tar\fR, with the prefix \fIgit\-docs/\fR.
.SH "AUTHOR"
Written by Rene Scharfe.
.SH "DOCUMENTATION"
Documentation by David Greaves, Junio C Hamano and the git\-list <git@vger.kernel.org>.
.SH "GIT"
Part of the \fBgit\fR(7) suite

