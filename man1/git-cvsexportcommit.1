.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "GIT-CVSEXPORTCOMMIT" 1 "" "" ""
.SH NAME
git-cvsexportcommit \- Export a commit to a CVS checkout
.SH "SYNOPSIS"


git\-cvsexportcommmit [\-h] [\-v] [\-c] [\-p] [PARENTCOMMIT] COMMITID

.SH "DESCRIPTION"


Exports a commit from GIT to a CVS checkout, making it easier to merge patches from a git repository into a CVS repository\&.


Execute it from the root of the CVS working copy\&. GIT_DIR must be defined\&. See examples below\&.


It does its best to do the safe thing, it will check that the files are unchanged and up to date in the CVS checkout, and it will not autocommit by default\&.


Supports file additions, removals, and commits that affect binary files\&.


If the commit is a merge commit, you must tell git\-cvsapplycommit what parent should the changeset be done against\&.

.SH "OPTIONS"

.TP
\-c
Commit automatically if the patch applied cleanly\&. It will not commit if any hunks fail to apply or there were other problems\&.

.TP
\-p
Be pedantic (paranoid) when applying patches\&. Invokes patch with \-\-fuzz=0

.TP
\-v
Verbose\&.

.SH "EXAMPLES"

.TP
Merge one patch into CVS

.IP
$ export GIT_DIR=~/project/\&.git
$ cd ~/project_cvs_checkout
$ git\-cvsexportcommit \-v <commit\-sha1>
$ cvs commit \-F \&.mgs <files>
.TP
Merge pending patches into CVS automatically -- only if you really know what you are doing

.IP
$ export GIT_DIR=~/project/\&.git
$ cd ~/project_cvs_checkout
$ git\-cherry cvshead myhead | sed \-n 's/^+ //p' | xargs \-l1 git\-cvsexportcommit \-c \-p \-v
.SH "AUTHOR"


Written by Martin Langhoff <martin@catalyst\&.net\&.nz>

.SH "DOCUMENTATION"


Documentation by Martin Langhoff <martin@catalyst\&.net\&.nz>

.SH "GIT"


Part of the \fBgit\fR(7) suite

