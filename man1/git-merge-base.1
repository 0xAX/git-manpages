.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "GIT-MERGE-BASE" 1 "" "" ""
.SH NAME
git-merge-base \- Finds as good a common ancestor as possible for a merge
.SH "SYNOPSIS"


\fIgit\-merge\-base\fR [\-\-all] <commit> <commit>

.SH "DESCRIPTION"


"git\-merge\-base" finds as good a common ancestor as possible between the two commits\&. That is, given two commits A and B \fIgit\-merge\-base A B\fR will output a commit which is reachable from both A and B through the parent relationship\&.


Given a selection of equally good common ancestors it should not be relied on to decide in any particular way\&.


The "git\-merge\-base" algorithm is still in flux \- use the source...

.SH "OPTIONS"

.TP
\-\-all
Output all common ancestors for the two commits instead of just one\&.

.SH "AUTHOR"


Written by Linus Torvalds <torvalds@osdl\&.org>

.SH "DOCUMENTATION"


Documentation by David Greaves, Junio C Hamano and the git\-list <git@vger\&.kernel\&.org>\&.

.SH "GIT"


Part of the \fBgit\fR(7) suite

