.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "GIT-COMMIT-TREE" 1 "" "" ""
.SH NAME
git-commit-tree \- Creates a new commit object
.SH "SYNOPSIS"


\fIgit\-commit\-tree\fR <tree> [\-p <parent commit>]* < changelog

.SH "DESCRIPTION"


Creates a new commit object based on the provided tree object and emits the new commit object id on stdout\&. If no parent is given then it is considered to be an initial tree\&.


A commit object usually has 1 parent (a commit after a change) or up to 16 parents\&. More than one parent represents a merge of branches that led to them\&.


While a tree represents a particular directory state of a working directory, a commit represents that state in "time", and explains how to get there\&.


Normally a commit would identify a new "HEAD" state, and while git doesn't care where you save the note about that state, in practice we tend to just write the result to the file that is pointed at by \&.git/HEAD, so that we can always see what the last committed state was\&.

.SH "OPTIONS"

.TP
<tree>
An existing tree object

.TP
\-p <parent commit>
Each \fI\-p\fR indicates the id of a parent commit object\&.

.SH "COMMIT INFORMATION"


A commit encapsulates:

.TP 3
\(bu
all parent object ids
.TP
\(bu
author name, email and date
.TP
\(bu
committer name and email and the commit time\&.
.LP


If not provided, "git\-commit\-tree" uses your name, hostname and domain to provide author and committer info\&. This can be overridden by either \&.git/config file, or using the following environment variables\&.

.nf
GIT_AUTHOR_NAME
GIT_AUTHOR_EMAIL
GIT_AUTHOR_DATE
GIT_COMMITTER_NAME
GIT_COMMITTER_EMAIL
.fi


(nb "<", ">" and "\\n"s are stripped)


In \&.git/config file, the following items are used for GIT_AUTHOR_NAME and GIT_AUTHOR_EMAIL:

.nf
[user]
        name = "Your Name"
        email = "your@email\&.address\&.xz"
.fi


A commit comment is read from stdin (max 999 chars)\&. If a changelog entry is not provided via "<" redirection, "git\-commit\-tree" will just wait for one to be entered and terminated with ^D\&.

.SH "DIAGNOSTICS"

.TP
You don't exist\&. Go away!
The passwd(5) gecos field couldn't be read

.TP
Your parents must have hated you!
The password(5) gecos field is longer than a giant static buffer\&.

.TP
Your sysadmin must hate you!
The password(5) name field is longer than a giant static buffer\&.

.SH "SEE ALSO"


\fBgit\-write\-tree\fR(1)

.SH "AUTHOR"


Written by Linus Torvalds <torvalds@osdl\&.org>

.SH "DOCUMENTATION"


Documentation by David Greaves, Junio C Hamano and the git\-list <git@vger\&.kernel\&.org>\&.

.SH "GIT"


Part of the \fBgit\fR(7) suite

