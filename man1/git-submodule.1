.\"     Title: git-submodule
.\"    Author: 
.\" Generator: DocBook XSL Stylesheets v1.73.2 <http://docbook.sf.net/>
.\"      Date: 07/06/2008
.\"    Manual: Git Manual
.\"    Source: Git 1.5.6.2.212.g08b5
.\"
.TH "GIT\-SUBMODULE" "1" "07/06/2008" "Git 1\.5\.6\.2\.212\.g08b5" "Git Manual"
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.SH "NAME"
git-submodule - Initialize, update or inspect submodules
.SH "SYNOPSIS"
.sp
.RS 4
.nf
\fIgit submodule\fR [\-\-quiet] add [\-b branch] [\-\-] <repository> [<path>]
\fIgit submodule\fR [\-\-quiet] status [\-\-cached] [\-\-] [<path>\&...]
\fIgit submodule\fR [\-\-quiet] init [\-\-] [<path>\&...]
\fIgit submodule\fR [\-\-quiet] update [\-\-init] [\-\-] [<path>\&...]
\fIgit submodule\fR [\-\-quiet] summary [\-\-summary\-limit <n>] [commit] [\-\-] [<path>\&...]
.fi
.RE
.SH "COMMANDS"
.PP
add
.RS 4
Add the given repository as a submodule at the given path to the changeset to be committed next\. If path is a valid repository within the project, it is added as is\. Otherwise, repository is cloned at the specified path\. path is added to the changeset and registered in \.gitmodules\. If no path is specified, the path is deduced from the repository specification\. If the repository url begins with \./ or \.\./, it is stored as given but resolved as a relative path from the main project\'s url when cloning\.
.RE
.PP
status
.RS 4
Show the status of the submodules\. This will print the SHA\-1 of the currently checked out commit for each submodule, along with the submodule path and the output of \fIgit\-describe\fR for the SHA\-1\. Each SHA\-1 will be prefixed with \- if the submodule is not initialized and + if the currently checked out submodule commit does not match the SHA\-1 found in the index of the containing repository\. This command is the default command for \fIgit\-submodule\fR\.
.RE
.PP
init
.RS 4
Initialize the submodules, i\.e\. register in \.git/config each submodule name and url found in \.gitmodules\. The key used in \.git/config is submodule\.$name\.url\. This command does not alter existing information in \.git/config\.
.RE
.PP
update
.RS 4
Update the registered submodules, i\.e\. clone missing submodules and checkout the commit specified in the index of the containing repository\. This will make the submodules HEAD be detached\.

If the submodule is not yet initialized, and you just want to use the setting as stored in \.gitmodules, you can automatically initialize the submodule with the \-\-init option\.
.RE
.PP
summary
.RS 4
Show commit summary between the given commit (defaults to HEAD) and working tree/index\. For a submodule in question, a series of commits in the submodule between the given super project commit and the index or working tree (switched by \-\-cached) are shown\.
.RE
.SH "OPTIONS"
.PP
\-q, \-\-quiet
.RS 4
Only print error messages\.
.RE
.PP
\-b, \-\-branch
.RS 4
Branch of repository to add as submodule\.
.RE
.PP
\-\-cached
.RS 4
This option is only valid for status and summary commands\. These commands typically use the commit found in the submodule HEAD, but with this option, the commit stored in the index is used instead\.
.RE
.PP
\-n, \-\-summary\-limit
.RS 4
This option is only valid for the summary command\. Limit the summary size (number of commits shown in total)\. Giving 0 will disable the summary; a negative number means unlimited (the default)\. This limit only applies to modified submodules\. The size is always limited to 1 for added/deleted/typechanged submodules\.
.RE
.PP
<path>
.RS 4
Path to submodule(s)\. When specified this will restrict the command to only operate on the submodules found at the specified paths\.
.RE
.SH "FILES"
When initializing submodules, a \.gitmodules file in the top\-level directory of the containing repository is used to find the url of each submodule\. This file should be formatted in the same way as $GIT_DIR/config\. The key to each submodule url is "submodule\.$name\.url"\. See \fBgitmodules\fR(5) for details\.
.SH "AUTHOR"
Written by Lars Hjemli <hjemli@gmail\.com>
.SH "GIT"
Part of the \fBgit\fR(1) suite

