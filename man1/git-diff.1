.\" ** You probably do not want to edit this file directly **
.\" It was generated using the DocBook XSL Stylesheets (version 1.69.1).
.\" Instead of manually editing it, you probably should edit the DocBook XML
.\" source for it and then use the DocBook XSL Stylesheets to regenerate it.
.TH "GIT\-DIFF" "1" "03/25/2007" "" ""
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.SH "NAME"
git\-diff \- Show changes between commits, commit and working tree, etc
.SH "SYNOPSIS"
\fIgit\-diff\fR [<common diff options>] <commit>{0,2} [\-\-] [<path>\&...]
.SH "DESCRIPTION"
Show changes between two trees, a tree and the working tree, a tree and the index file, or the index file and the working tree.
.TP
\fIgit\-diff\fR [\-\-options] [\-\-] [<path>\&...]
This form is to view the changes you made relative to the index (staging area for the next commit). In other words, the differences are what you _could_ tell git to further add to the index but you still haven't. You can stage these changes by using \fBgit\-add\fR(1).
.sp
.nf
If exactly two paths are given, and at least one is untracked,
compare the two files / directories. This behavior can be
forced by \-\-no\-index.
.fi
.TP
\fIgit\-diff\fR [\-\-options] \-\-cached [<commit>] [\-\-] [<path>\&...]
This form is to view the changes you staged for the next commit relative to the named <commit>. Typically you would want comparison with the latest commit, so if you do not give <commit>, it defaults to HEAD.
.TP
\fIgit\-diff\fR [\-\-options] <commit> [\-\-] [<path>\&...]
This form is to view the changes you have in your working tree relative to the named <commit>. You can use HEAD to compare it with the latest commit, or a branch name to compare with the tip of a different branch.
.TP
\fIgit\-diff\fR [\-\-options] <commit> <commit> [\-\-] [<path>\&...]
This form is to view the changes between two <commit>, for example, tips of two branches.

Just in case if you are doing something exotic, it should be noted that all of the <commit> in the above description can be any <tree\-ish>.

For a more complete list of ways to spell <commit>, see "SPECIFYING REVISIONS" section in \fBgit\-rev\-parse\fR(1).
.SH "OPTIONS"
.TP
\-p
Generate patch (see section on generating patches)
.TP
\-u
Synonym for "\-p".
.TP
\-\-raw
Generate the raw format.
.TP
\-\-patch\-with\-raw
Synonym for "\-p \-\-raw".
.TP
\-\-stat[=width[,name\-width]]
Generate a diffstat. You can override the default output width for 80\-column terminal by "\-\-stat=width". The width of the filename part can be controlled by giving another width to it separated by a comma.
.TP
\-\-numstat
Similar to \-\-stat, but shows number of added and deleted lines in decimal notation and pathname without abbreviation, to make it more machine friendly. For binary files, outputs two \- instead of saying 0 0.
.TP
\-\-shortstat
Output only the last line of the \-\-stat format containing total number of modified files, as well as number of added and deleted lines.
.TP
\-\-summary
Output a condensed summary of extended header information such as creations, renames and mode changes.
.TP
\-\-patch\-with\-stat
Synonym for "\-p \-\-stat".
.TP
\-z
\\0 line termination on output
.TP
\-\-name\-only
Show only names of changed files.
.TP
\-\-name\-status
Show only names and status of changed files.
.TP
\-\-color
Show colored diff.
.TP
\-\-no\-color
Turn off colored diff, even when the configuration file gives the default to color output.
.TP
\-\-color\-words
Show colored word diff, i.e. color words which have changed.
.TP
\-\-no\-renames
Turn off rename detection, even when the configuration file gives the default to do so.
.TP
\-\-check
Warn if changes introduce trailing whitespace or an indent that uses a space before a tab.
.TP
\-\-full\-index
Instead of the first handful characters, show full object name of pre\- and post\-image blob on the "index" line when generating a patch format output.
.TP
\-\-binary
In addition to \-\-full\-index, output "binary diff" that can be applied with "git apply".
.TP
\-\-abbrev[=<n>]
Instead of showing the full 40\-byte hexadecimal object name in diff\-raw format output and diff\-tree header lines, show only handful hexdigits prefix. This is independent of \-\-full\-index option above, which controls the diff\-patch output format. Non default number of digits can be specified with \-\-abbrev=<n>.
.TP
\-B
Break complete rewrite changes into pairs of delete and create.
.TP
\-M
Detect renames.
.TP
\-C
Detect copies as well as renames.
.TP
\-\-diff\-filter=[ACDMRTUXB*]
Select only files that are Added (A), Copied (C), Deleted (D), Modified (M), Renamed (R), have their type (mode) changed (T), are Unmerged (U), are Unknown (X), or have had their pairing Broken (B). Any combination of the filter characters may be used. When * (All\-or\-none) is added to the combination, all paths are selected if there is any file that matches other criteria in the comparison; if there is no file that matches other criteria, nothing is selected.
.TP
\-\-find\-copies\-harder
For performance reasons, by default, \-C option finds copies only if the original file of the copy was modified in the same changeset. This flag makes the command inspect unmodified files as candidates for the source of copy. This is a very expensive operation for large projects, so use it with caution.
.TP
\-l<num>
\-M and \-C options require O(n^2) processing time where n is the number of potential rename/copy targets. This option prevents rename/copy detection from running if the number of rename/copy targets exceeds the specified number.
.TP
\-S<string>
Look for differences that contain the change in <string>.
.TP
\-\-pickaxe\-all
When \-S finds a change, show all the changes in that changeset, not just the files that contain the change in <string>.
.TP
\-\-pickaxe\-regex
Make the <string> not a plain string but an extended POSIX regex to match.
.TP
\-O<orderfile>
Output the patch in the order specified in the <orderfile>, which has one shell glob pattern per line.
.TP
\-R
Swap two inputs; that is, show differences from index or on\-disk file to tree contents.
.TP
\-\-text
Treat all files as text.
.TP
\-a
Shorthand for "\-\-text".
.TP
\-\-ignore\-space\-at\-eol
Ignore changes in white spaces at EOL.
.TP
\-\-ignore\-space\-change
Ignore changes in amount of white space. This ignores white space at line end, and consider all other sequences of one or more white space characters to be equivalent.
.TP
\-b
Shorthand for "\-\-ignore\-space\-change".
.TP
\-\-ignore\-all\-space
Ignore white space when comparing lines. This ignores difference even if one line has white space where the other line has none.
.TP
\-w
Shorthand for "\-\-ignore\-all\-space".
.TP
\-\-exit\-code
Make the program exit with codes similar to diff(1). That is, it exits with 1 if there were differences and 0 means no differences.
.TP
\-\-quiet
Disable all output of the program. Implies \-\-exit\-code.

For more detailed explanation on these common options, see also [1]\&\fIdiffcore documentation\fR.
.TP
<path>\&...
The <paths> parameters, when given, are used to limit the diff to the named paths (you can give directory names and get diff for all files under them).
.SH "EXAMPLES"
.TP
Various ways to check your working tree
.sp
.nf
$ git diff            \fB(1)\fR
$ git diff \-\-cached   \fB(2)\fR
$ git diff HEAD       \fB(3)\fR
.fi
.sp
\fB1. \fRchanges in the working tree not yet staged for the next commit.
.br
\fB2. \fRchanges between the index and your last commit; what you would be committing if you run "git commit" without "\-a" option.
.br
\fB3. \fRchanges in the working tree since your last commit; what you would be committing if you run "git commit \-a"
.br
.TP
Comparing with arbitrary commits
.sp
.nf
$ git diff test            \fB(1)\fR
$ git diff HEAD \-\- ./test  \fB(2)\fR
$ git diff HEAD^ HEAD      \fB(3)\fR
.fi
.sp
\fB1. \fRinstead of using the tip of the current branch, compare with the tip of "test" branch.
.br
\fB2. \fRinstead of comparing with the tip of "test" branch, compare with the tip of the current branch, but limit the comparison to the file "test".
.br
\fB3. \fRcompare the version before the last commit and the last commit.
.br
.TP
Limiting the diff output
.sp
.nf
$ git diff \-\-diff\-filter=MRC            \fB(1)\fR
$ git diff \-\-name\-status \-r             \fB(2)\fR
$ git diff arch/i386 include/asm\-i386   \fB(3)\fR
.fi
.sp
\fB1. \fRshow only modification, rename and copy, but not addition nor deletion.
.br
\fB2. \fRshow only names and the nature of change, but not actual diff output. \-\-name\-status disables usual patch generation which in turn also disables recursive behavior, so without \-r you would only see the directory name if there is a change in a file in a subdirectory.
.br
\fB3. \fRlimit diff output to named subtrees.
.br
.TP
Munging the diff output
.sp
.nf
$ git diff \-\-find\-copies\-harder \-B \-C  \fB(1)\fR
$ git diff \-R                          \fB(2)\fR
.fi
.sp
\fB1. \fRspend extra cycles to find renames, copies and complete rewrites (very expensive).
.br
\fB2. \fRoutput diff in reverse.
.br
.SH "AUTHOR"
Written by Linus Torvalds <torvalds@osdl.org>
.SH "DOCUMENTATION"
Documentation by Junio C Hamano and the git\-list <git@vger.kernel.org>.
.SH "GIT"
Part of the \fBgit\fR(7) suite
.SH "REFERENCES"
.TP 3
1.\ diffcore documentation
\%diffcore.html
