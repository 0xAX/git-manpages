.\"     Title: git-format-patch
.\"    Author: 
.\" Generator: DocBook XSL Stylesheets v1.73.2 <http://docbook.sf.net/>
.\"      Date: 08/20/2008
.\"    Manual: Git Manual
.\"    Source: Git 1.6.0.36.g3814c
.\"
.TH "GIT\-FORMAT\-PATCH" "1" "08/20/2008" "Git 1\.6\.0\.36\.g3814c" "Git Manual"
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.SH "NAME"
git-format-patch - Prepare patches for e-mail submission
.SH "SYNOPSIS"
.sp
.RS 4
.nf
\fIgit format\-patch\fR [\-k] [\-o <dir> | \-\-stdout] [\-\-thread]
                   [\-\-attach[=<boundary>] | \-\-inline[=<boundary>]]
                   [\-s | \-\-signoff] [<common diff options>]
                   [\-n | \-\-numbered | \-N | \-\-no\-numbered]
                   [\-\-start\-number <n>] [\-\-numbered\-files]
                   [\-\-in\-reply\-to=Message\-Id] [\-\-suffix=\.<sfx>]
                   [\-\-ignore\-if\-in\-upstream]
                   [\-\-subject\-prefix=Subject\-Prefix]
                   [\-\-cc=<email>]
                   [\-\-cover\-letter]
                   [ <since> | <revision range> ]
.fi
.RE
.SH "DESCRIPTION"
Prepare each commit with its patch in one file per commit, formatted to resemble UNIX mailbox format\. The output of this command is convenient for e\-mail submission or for use with \fIgit\-am\fR\.

There are two ways to specify which commits to operate on\.

.sp
.RS 4
\h'-04' 1.\h'+02'A single commit, <since>, specifies that the commits leading to the tip of the current branch that are not in the history that leads to the <since> to be output\.
.RE
.sp
.RS 4
\h'-04' 2.\h'+02'Generic <revision range> expression (see "SPECIFYING REVISIONS" section in \fBgit-rev-parse\fR(1)) means the commits in the specified range\.
.RE
A single commit, when interpreted as a <revision range> expression, means "everything that leads to that commit", but if you write \fIgit format\-patch <commit>\fR, the previous rule applies to that command line and you do not get "everything since the beginning of the time"\. If you want to format everything since project inception to one commit, say "git format\-patch \-\-root <commit>" to make it clear that it is the latter case\.

By default, each output file is numbered sequentially from 1, and uses the first line of the commit message (massaged for pathname safety) as the filename\. With the \-\-numbered\-files option, the output file names will only be numbers, without the first line of the commit appended\. The names of the output files are printed to standard output, unless the \-\-stdout option is specified\.

If \-o is specified, output files are created in <dir>\. Otherwise they are created in the current working directory\.

If \-n is specified, instead of "[PATCH] Subject", the first line is formatted as "[PATCH n/m] Subject"\.

If given \-\-thread, \fIgit\-format\-patch\fR will generate In\-Reply\-To and References headers to make the second and subsequent patch mails appear as replies to the first mail; this also generates a Message\-Id header to reference\.
.SH "OPTIONS"
.PP
\-p
.RS 4
Generate patches without diffstat\.
.RE
.PP
\-u
.RS 4
Synonym for "\-p"\.
.RE
.PP
\-U<n>
.RS 4
Shorthand for "\-\-unified=<n>"\.
.RE
.PP
\-\-unified=<n>
.RS 4
Generate diffs with <n> lines of context instead of the usual three\. Implies "\-p"\.
.RE
.PP
\-\-raw
.RS 4
Generate the raw format\.
.RE
.PP
\-\-patch\-with\-raw
.RS 4
Synonym for "\-p \-\-raw"\.
.RE
.PP
\-\-stat[=width[,name\-width]]
.RS 4
Generate a diffstat\. You can override the default output width for 80\-column terminal by "\-\-stat=width"\. The width of the filename part can be controlled by giving another width to it separated by a comma\.
.RE
.PP
\-\-numstat
.RS 4
Similar to \-\-stat, but shows number of added and deleted lines in decimal notation and pathname without abbreviation, to make it more machine friendly\. For binary files, outputs two \- instead of saying 0 0\.
.RE
.PP
\-\-shortstat
.RS 4
Output only the last line of the \-\-stat format containing total number of modified files, as well as number of added and deleted lines\.
.RE
.PP
\-\-dirstat[=limit]
.RS 4
Output only the sub\-directories that are impacted by a diff, and to what degree they are impacted\. You can override the default cut\-off in percent (3) by "\-\-dirstat=limit"\. If you want to enable "cumulative" directory statistics, you can use the "\-\-cumulative" flag, which adds up percentages recursively even when they have been already reported for a sub\-directory\.
.RE
.PP
\-\-summary
.RS 4
Output a condensed summary of extended header information such as creations, renames and mode changes\.
.RE
.PP
\-\-patch\-with\-stat
.RS 4
Synonym for "\-p \-\-stat"\. This is the default\.
.RE
.PP
\-z
.RS 4
NUL\-line termination on output\. This affects the \-\-raw output field terminator\. Also output from commands such as "git\-log" will be delimited with NUL between commits\.
.RE
.PP
\-\-name\-only
.RS 4
Show only names of changed files\.
.RE
.PP
\-\-name\-status
.RS 4
Show only names and status of changed files\. See the description of the \-\-diff\-filter option on what the status letters mean\.
.RE
.PP
\-\-color
.RS 4
Show colored diff\.
.RE
.PP
\-\-no\-color
.RS 4
Turn off colored diff, even when the configuration file gives the default to color output\.
.RE
.PP
\-\-color\-words
.RS 4
Show colored word diff, i\.e\. color words which have changed\.
.RE
.PP
\-\-no\-renames
.RS 4
Turn off rename detection, even when the configuration file gives the default to do so\.
.RE
.PP
\-\-check
.RS 4
Warn if changes introduce trailing whitespace or an indent that uses a space before a tab\. Exits with non\-zero status if problems are found\. Not compatible with \-\-exit\-code\.
.RE
.PP
\-\-full\-index
.RS 4
Instead of the first handful of characters, show the full pre\- and post\-image blob object names on the "index" line when generating patch format output\.
.RE
.PP
\-\-binary
.RS 4
In addition to \-\-full\-index, output "binary diff" that can be applied with "git apply"\.
.RE
.PP
\-\-abbrev[=<n>]
.RS 4
Instead of showing the full 40\-byte hexadecimal object name in diff\-raw format output and diff\-tree header lines, show only handful hexdigits prefix\. This is independent of \-\-full\-index option above, which controls the diff\-patch output format\. Non default number of digits can be specified with \-\-abbrev=<n>\.
.RE
.PP
\-B
.RS 4
Break complete rewrite changes into pairs of delete and create\.
.RE
.PP
\-M
.RS 4
Detect renames\.
.RE
.PP
\-C
.RS 4
Detect copies as well as renames\. See also \-\-find\-copies\-harder\.
.RE
.PP
\-\-diff\-filter=[ACDMRTUXB*]
.RS 4
Select only files that are Added (A), Copied (C), Deleted (D), Modified (M), Renamed (R), have their type (mode) changed (T), are Unmerged (U), are Unknown (X), or have had their pairing Broken (B)\. Any combination of the filter characters may be used\. When * (All\-or\-none) is added to the combination, all paths are selected if there is any file that matches other criteria in the comparison; if there is no file that matches other criteria, nothing is selected\.
.RE
.PP
\-\-find\-copies\-harder
.RS 4
For performance reasons, by default, \-C option finds copies only if the original file of the copy was modified in the same changeset\. This flag makes the command inspect unmodified files as candidates for the source of copy\. This is a very expensive operation for large projects, so use it with caution\. Giving more than one \-C option has the same effect\.
.RE
.PP
\-l<num>
.RS 4
\-M and \-C options require O(n^2) processing time where n is the number of potential rename/copy targets\. This option prevents rename/copy detection from running if the number of rename/copy targets exceeds the specified number\.
.RE
.PP
\-S<string>
.RS 4
Look for differences that contain the change in <string>\.
.RE
.PP
\-\-pickaxe\-all
.RS 4
When \-S finds a change, show all the changes in that changeset, not just the files that contain the change in <string>\.
.RE
.PP
\-\-pickaxe\-regex
.RS 4
Make the <string> not a plain string but an extended POSIX regex to match\.
.RE
.PP
\-O<orderfile>
.RS 4
Output the patch in the order specified in the <orderfile>, which has one shell glob pattern per line\.
.RE
.PP
\-R
.RS 4
Swap two inputs; that is, show differences from index or on\-disk file to tree contents\.
.RE
.PP
\-\-relative[=<path>]
.RS 4
When run from a subdirectory of the project, it can be told to exclude changes outside the directory and show pathnames relative to it with this option\. When you are not in a subdirectory (e\.g\. in a bare repository), you can name which subdirectory to make the output relative to by giving a <path> as an argument\.
.RE
.PP
\-\-text
.RS 4
Treat all files as text\.
.RE
.PP
\-a
.RS 4
Shorthand for "\-\-text"\.
.RE
.PP
\-\-ignore\-space\-at\-eol
.RS 4
Ignore changes in whitespace at EOL\.
.RE
.PP
\-\-ignore\-space\-change
.RS 4
Ignore changes in amount of whitespace\. This ignores whitespace at line end, and considers all other sequences of one or more whitespace characters to be equivalent\.
.RE
.PP
\-b
.RS 4
Shorthand for "\-\-ignore\-space\-change"\.
.RE
.PP
\-\-ignore\-all\-space
.RS 4
Ignore whitespace when comparing lines\. This ignores differences even if one line has whitespace where the other line has none\.
.RE
.PP
\-w
.RS 4
Shorthand for "\-\-ignore\-all\-space"\.
.RE
.PP
\-\-exit\-code
.RS 4
Make the program exit with codes similar to diff(1)\. That is, it exits with 1 if there were differences and 0 means no differences\.
.RE
.PP
\-\-quiet
.RS 4
Disable all output of the program\. Implies \-\-exit\-code\.
.RE
.PP
\-\-ext\-diff
.RS 4
Allow an external diff helper to be executed\. If you set an external diff driver with \fBgitattributes\fR(5), you need to use this option with \fBgit-log\fR(1) and friends\.
.RE
.PP
\-\-no\-ext\-diff
.RS 4
Disallow external diff drivers\.
.RE
.PP
\-\-ignore\-submodules
.RS 4
Ignore changes to submodules in the diff generation\.
.RE
.PP
\-\-src\-prefix=<prefix>
.RS 4
Show the given source prefix instead of "a/"\.
.RE
.PP
\-\-dst\-prefix=<prefix>
.RS 4
Show the given destination prefix instead of "b/"\.
.RE
.PP
\-\-no\-prefix
.RS 4
Do not show any source or destination prefix\.
.RE
For more detailed explanation on these common options, see also \fBgitdiffcore\fR(7)\.
.PP
\-<n>
.RS 4
Limits the number of patches to prepare\.
.RE
.PP
\-o <dir>, \-\-output\-directory <dir>
.RS 4
Use <dir> to store the resulting files, instead of the current working directory\.
.RE
.PP
\-n, \-\-numbered
.RS 4
Name output in \fI[PATCH n/m]\fR format\.
.RE
.PP
\-N, \-\-no\-numbered
.RS 4
Name output in \fI[PATCH]\fR format\.
.RE
.PP
\-\-start\-number <n>
.RS 4
Start numbering the patches at <n> instead of 1\.
.RE
.PP
\-\-numbered\-files
.RS 4
Output file names will be a simple number sequence without the default first line of the commit appended\. Mutually exclusive with the \-\-stdout option\.
.RE
.PP
\-k, \-\-keep\-subject
.RS 4
Do not strip/add \fI[PATCH]\fR from the first line of the commit log message\.
.RE
.PP
\-s, \-\-signoff
.RS 4
Add Signed\-off\-by: line to the commit message, using the committer identity of yourself\.
.RE
.PP
\-\-stdout
.RS 4
Print all commits to the standard output in mbox format, instead of creating a file for each one\.
.RE
.PP
\-\-attach[=<boundary>]
.RS 4
Create multipart/mixed attachment, the first part of which is the commit message and the patch itself in the second part, with "Content\-Disposition: attachment"\.
.RE
.PP
\-\-inline[=<boundary>]
.RS 4
Create multipart/mixed attachment, the first part of which is the commit message and the patch itself in the second part, with "Content\-Disposition: inline"\.
.RE
.PP
\-\-thread
.RS 4
Add In\-Reply\-To and References headers to make the second and subsequent mails appear as replies to the first\. Also generates the Message\-Id header to reference\.
.RE
.PP
\-\-in\-reply\-to=Message\-Id
.RS 4
Make the first mail (or all the mails with \-\-no\-thread) appear as a reply to the given Message\-Id, which avoids breaking threads to provide a new patch series\.
.RE
.PP
\-\-ignore\-if\-in\-upstream
.RS 4
Do not include a patch that matches a commit in <until>\.\.<since>\. This will examine all patches reachable from <since> but not from <until> and compare them with the patches being generated, and any patch that matches is ignored\.
.RE
.PP
\-\-subject\-prefix=<Subject\-Prefix>
.RS 4
Instead of the standard \fI[PATCH]\fR prefix in the subject line, instead use \fI[<Subject\-Prefix>]\fR\. This allows for useful naming of a patch series, and can be combined with the \-\-numbered option\.
.RE
.PP
\-\-cc=<email>
.RS 4
Add a "Cc:" header to the email headers\. This is in addition to any configured headers, and may be used multiple times\.
.RE
.PP
\-\-cover\-letter
.RS 4
In addition to the patches, generate a cover letter file containing the shortlog and the overall diffstat\. You can fill in a description in the file before sending it out\.
.RE
.PP
\-\-suffix=\.<sfx>
.RS 4
Instead of using \.patch as the suffix for generated filenames, use specified suffix\. A common alternative is \-\-suffix=\.txt\.

Note that you would need to include the leading dot \. if you want a filename like 0001\-description\-of\-my\-change\.patch, and the first letter does not have to be a dot\. Leaving it empty would not add any suffix\.
.RE
.PP
\-\-no\-binary
.RS 4
Don\'t output contents of changes in binary files, just take note that they differ\. Note that this disable the patch to be properly applied\. By default the contents of changes in those files are encoded in the patch\.
.RE
.SH "CONFIGURATION"
You can specify extra mail header lines to be added to each message in the repository configuration, new defaults for the subject prefix and file suffix, and number patches when outputting more than one\.

.sp
.RS 4
.nf

\.ft C
[format]
        headers = "Organization: git\-foo\en"
        subjectprefix = CHANGE
        suffix = \.txt
        numbered = auto
        cc = <email>
\.ft

.fi
.RE
.SH "EXAMPLES"
.sp
.RS 4
\h'-04'\(bu\h'+03'Extract commits between revisions R1 and R2, and apply them on top of the current branch using \fIgit\-am\fR to cherry\-pick them:

.sp
.RS 4
.nf

\.ft C
$ git format\-patch \-k \-\-stdout R1\.\.R2 | git am \-3 \-k
\.ft

.fi
.RE
.RE
.sp
.RS 4
\h'-04'\(bu\h'+03'Extract all commits which are in the current branch but not in the origin branch:

.sp
.RS 4
.nf

\.ft C
$ git format\-patch origin
\.ft

.fi
.RE
For each commit a separate file is created in the current directory\.
.RE
.sp
.RS 4
\h'-04'\(bu\h'+03'Extract all commits that lead to \fIorigin\fR since the inception of the project:

.sp
.RS 4
.nf

\.ft C
$ git format\-patch \-\-root origin
\.ft

.fi
.RE
.RE
.sp
.RS 4
\h'-04'\(bu\h'+03'The same as the previous one:

.sp
.RS 4
.nf

\.ft C
$ git format\-patch \-M \-B origin
\.ft

.fi
.RE
Additionally, it detects and handles renames and complete rewrites intelligently to produce a renaming patch\. A renaming patch reduces the amount of text output, and generally makes it easier to review it\. Note that the "patch" program does not understand renaming patches, so use it only when you know the recipient uses git to apply your patch\.
.RE
.sp
.RS 4
\h'-04'\(bu\h'+03'Extract three topmost commits from the current branch and format them as e\-mailable patches:

.sp
.RS 4
.nf

\.ft C
$ git format\-patch \-3
\.ft

.fi
.RE
.RE
.SH "SEE ALSO"
\fBgit-am\fR(1), \fBgit-send-email\fR(1)
.SH "AUTHOR"
Written by Junio C Hamano <gitster@pobox\.com>
.SH "DOCUMENTATION"
Documentation by Junio C Hamano and the git\-list <git@vger\.kernel\.org>\.
.SH "GIT"
Part of the \fBgit\fR(1) suite

