.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "GIT-REBASE" 1 "" "" ""
.SH NAME
git-rebase \- Rebase local commits to new upstream head
.SH "SYNOPSIS"


\fIgit\-rebase\fR [\-\-onto <newbase>] <upstream> [<branch>]

.SH "DESCRIPTION"


git\-rebase applies to <upstream> (or optionally to <newbase>) commits from <branch> that do not appear in <upstream>\&. When <branch> is not specified it defaults to the current branch (HEAD)\&.


When git\-rebase is complete, <branch> will be updated to point to the newly created line of commit objects, so the previous line will not be accessible unless there are other references to it already\&.


Assume the following history exists and the current branch is "topic":

.nf
      A\-\-\-B\-\-\-C topic
     /
D\-\-\-E\-\-\-F\-\-\-G master
.fi


From this point, the result of either of the following commands:

.nf
git\-rebase master
git\-rebase master topic
.fi


would be:

.nf
              A'\-\-B'\-\-C' topic
             /
D\-\-\-E\-\-\-F\-\-\-G master
.fi


While, starting from the same point, the result of either of the following commands:

.nf
git\-rebase \-\-onto master~1 master
git\-rebase \-\-onto master~1 master topic
.fi


would be:

.nf
          A'\-\-B'\-\-C' topic
         /
D\-\-\-E\-\-\-F\-\-\-G master
.fi

.SH "OPTIONS"

.TP
<newbase>
Starting point at which to create the new commits\&. If the \-\-onto option is not specified, the starting point is <upstream>\&.

.TP
<upstream>
Upstream branch to compare against\&.

.TP
<branch>
Working branch; defaults to HEAD\&.

.SH "AUTHOR"


Written by Junio C Hamano <junkio@cox\&.net>

.SH "DOCUMENTATION"


Documentation by Junio C Hamano and the git\-list <git@vger\&.kernel\&.org>\&.

.SH "GIT"


Part of the \fBgit\fR(7) suite

