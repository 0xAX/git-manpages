.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "GIT-CHERRY" 1 "" "" ""
.SH NAME
git-cherry \- Find commits not merged upstream
.SH "SYNOPSIS"


\fIgit\-cherry\fR [\-v] <upstream> [<head>]

.SH "DESCRIPTION"


The changeset (or "diff") of each commit between the fork\-point and <head> is compared against each commit between the fork\-point and <upstream>\&.


Every commit with a changeset that doesn't exist in the other branch has its id (sha1) reported, prefixed by a symbol\&. Those existing only in the <upstream> branch are prefixed with a minus (\-) sign, and those that only exist in the <head> branch are prefixed with a plus (+) symbol\&.


Because git\-cherry compares the changeset rather than the commit id (sha1), you can use git\-cherry to find out if a commit you made locally has been applied <upstream> under a different commit id\&. For example, this will happen if you're feeding patches <upstream> via email rather than pushing or pulling commits directly\&.

.SH "OPTIONS"

.TP
\-v
Verbose\&.

.TP
<upstream>
Upstream branch to compare against\&.

.TP
<head>
Working branch; defaults to HEAD\&.

.SH "AUTHOR"


Written by Junio C Hamano <junkio@cox\&.net>

.SH "DOCUMENTATION"


Documentation by Junio C Hamano and the git\-list <git@vger\&.kernel\&.org>\&.

.SH "GIT"


Part of the \fBgit\fR(7) suite

