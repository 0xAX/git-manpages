.\"     Title: git-name-rev
.\"    Author: 
.\" Generator: DocBook XSL Stylesheets v1.73.2 <http://docbook.sf.net/>
.\"      Date: 10/31/2008
.\"    Manual: Git Manual
.\"    Source: Git 1.6.0.2.287.g3791f
.\"
.TH "GIT\-NAME\-REV" "1" "10/31/2008" "Git 1\.6\.0\.2\.287\.g3791f" "Git Manual"
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.SH "NAME"
git-name-rev - Find symbolic names for given revs
.SH "SYNOPSIS"
.sp
.RS 4
.nf
\fIgit name\-rev\fR [\-\-tags] [\-\-refs=<pattern>]
               ( \-\-all | \-\-stdin | <committish>\&... )
.fi
.RE
.SH "DESCRIPTION"
Finds symbolic names suitable for human digestion for revisions given in any format parsable by \fIgit\-rev\-parse\fR\.
.SH "OPTIONS"
.PP
\-\-tags
.RS 4
Do not use branch names, but only tags to name the commits
.RE
.PP
\-\-refs=<pattern>
.RS 4
Only use refs whose names match a given shell pattern\.
.RE
.PP
\-\-all
.RS 4
List all commits reachable from all refs
.RE
.PP
\-\-stdin
.RS 4
Read from stdin, append "(<rev_name>)" to all sha1\'s of nameable commits, and pass to stdout
.RE
.PP
\-\-name\-only
.RS 4
Instead of printing both the SHA\-1 and the name, print only the name\. If given with \-\-tags the usual tag prefix of "tags/" is also omitted from the name, matching the output of git\-describe more closely\.
.RE
.PP
\-\-no\-undefined
.RS 4
Die with error code != 0 when a reference is undefined, instead of printing undefined\.
.RE
.PP
\-\-always
.RS 4
Show uniquely abbreviated commit object as fallback\.
.RE
.SH "EXAMPLE"
Given a commit, find out where it is relative to the local refs\. Say somebody wrote you about that fantastic commit 33db5f4d9027a10e477ccf054b2c1ab94f74c85a\. Of course, you look into the commit, but that only tells you what happened, but not the context\.

Enter \fIgit\-name\-rev\fR:

.sp
.RS 4
.nf

\.ft C
% git name\-rev 33db5f4d9027a10e477ccf054b2c1ab94f74c85a
33db5f4d9027a10e477ccf054b2c1ab94f74c85a tags/v0\.99~940
\.ft

.fi
.RE
Now you are wiser, because you know that it happened 940 revisions before v0\.99\.

Another nice thing you can do is:

.sp
.RS 4
.nf

\.ft C
% git log | git name\-rev \-\-stdin
\.ft

.fi
.RE
.SH "AUTHOR"
Written by Johannes Schindelin <Johannes\.Schindelin@gmx\.de>
.SH "DOCUMENTATION"
Documentation by Johannes Schindelin\.
.SH "GIT"
Part of the \fBgit\fR(1) suite

