.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "GIT-REVERT" 1 "" "" ""
.SH NAME
git-revert \- Revert an existing commit.
.SH "SYNOPSIS"


git\-revert [\-\-edit | \-\-no\-edit] [\-n] <commit>

.SH "DESCRIPTION"


Given one existing commit, revert the change the patch introduces, and record a new commit that records it\&. This requires your working tree to be clean (no modifications from the HEAD commit)\&.

.SH "OPTIONS"

.TP
<commit>
Commit to revert\&.

.TP
\-e|\-\-edit
With this option, git\-revert will let you edit the commit message prior committing the revert\&. This is the default if you run the command from a terminal\&.

.TP
\-\-no\-edit
With this option, git\-revert will not start the commit message editor\&.

.TP
\-n|\-\-no\-commit
Usually the command automatically creates a commit with a commit log message stating which commit was reverted\&. This flag applies the change necessary to revert the named commit to your working tree, but does not make the commit\&. In addition, when this option is used, your working tree does not have to match the HEAD commit\&. The revert is done against the beginning state of your working tree\&.

This is useful when reverting more than one commits' effect to your working tree in a row\&.

.SH "AUTHOR"


Written by Junio C Hamano <junkio@cox\&.net>

.SH "DOCUMENTATION"


Documentation by Junio C Hamano and the git\-list <git@vger\&.kernel\&.org>\&.

.SH "GIT"


Part of the \fBgit\fR(7) suite

