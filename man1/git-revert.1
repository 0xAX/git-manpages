.\" ** You probably do not want to edit this file directly **
.\" It was generated using the DocBook XSL Stylesheets (version 1.69.1).
.\" Instead of manually editing it, you probably should edit the DocBook XML
.\" source for it and then use the DocBook XSL Stylesheets to regenerate it.
.TH "GIT\-REVERT" "1" "06/08/2007" "Git 1.5.2.1.144.gabc40" "Git Manual"
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.SH "NAME"
git\-revert \- Revert an existing commit
.SH "SYNOPSIS"
\fIgit\-revert\fR [\-\-edit | \-\-no\-edit] [\-n] <commit>
.SH "DESCRIPTION"
Given one existing commit, revert the change the patch introduces, and record a new commit that records it. This requires your working tree to be clean (no modifications from the HEAD commit).
.SH "OPTIONS"
.TP
<commit>
Commit to revert. For a more complete list of ways to spell commit names, see "SPECIFYING REVISIONS" section in \fBgit\-rev\-parse\fR(1).
.TP
\-e|\-\-edit
With this option, git\-revert will let you edit the commit message prior committing the revert. This is the default if you run the command from a terminal.
.TP
\-\-no\-edit
With this option, git\-revert will not start the commit message editor.
.TP
\-n|\-\-no\-commit
Usually the command automatically creates a commit with a commit log message stating which commit was reverted. This flag applies the change necessary to revert the named commit to your working tree, but does not make the commit. In addition, when this option is used, your working tree does not have to match the HEAD commit. The revert is done against the beginning state of your working tree.

This is useful when reverting more than one commits' effect to your working tree in a row.
.SH "AUTHOR"
Written by Junio C Hamano <junkio@cox.net>
.SH "DOCUMENTATION"
Documentation by Junio C Hamano and the git\-list <git@vger.kernel.org>.
.SH "GIT"
Part of the \fBgit\fR(7) suite

