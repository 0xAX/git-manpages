.\"     Title: git-whatchanged
.\"    Author: 
.\" Generator: DocBook XSL Stylesheets v1.73.2 <http://docbook.sf.net/>
.\"      Date: 08/29/2008
.\"    Manual: Git Manual
.\"    Source: Git 1.6.0.1.141.g445ca
.\"
.TH "GIT\-WHATCHANGED" "1" "08/29/2008" "Git 1\.6\.0\.1\.141\.g445ca" "Git Manual"
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.SH "NAME"
git-whatchanged - Show logs with difference each commit introduces
.SH "SYNOPSIS"
\fIgit whatchanged\fR <option>\&...
.SH "DESCRIPTION"
Shows commit logs and diff output each commit introduces\. The command internally invokes \fIgit\-rev\-list\fR piped to \fIgit\-diff\-tree\fR, and takes command line options for both of these commands\.

This manual page describes only the most frequently used options\.
.SH "OPTIONS"
.PP
\-p
.RS 4
Show textual diffs, instead of the git internal diff output format that is useful only to tell the changed paths and their nature of changes\.
.RE
.PP
\-<n>
.RS 4
Limit output to <n> commits\.
.RE
.PP
<since>\.\.<until>
.RS 4
Limit output to between the two named commits (bottom exclusive, top inclusive)\.
.RE
.PP
\-r
.RS 4
Show git internal diff output, but for the whole tree, not just the top level\.
.RE
.PP
\-m
.RS 4
By default, differences for merge commits are not shown\. With this flag, show differences to that commit from all of its parents\.

However, it is not very useful in general, although it \fBis\fR useful on a file\-by\-file basis\.
.RE
.PP
\-\-pretty[=\fI<format>\fR]
.RS 4
Pretty\-print the contents of the commit logs in a given format, where \fI<format>\fR can be one of \fIoneline\fR, \fIshort\fR, \fImedium\fR, \fIfull\fR, \fIfuller\fR, \fIemail\fR, \fIraw\fR and \fIformat:<string>\fR\. When omitted, the format defaults to \fImedium\fR\.

Note: you can specify the default pretty format in the repository configuration (see \fBgit-config\fR(1))\.
.RE
.PP
\-\-abbrev\-commit
.RS 4
Instead of showing the full 40\-byte hexadecimal commit object name, show only handful hexdigits prefix\. Non default number of digits can be specified with "\-\-abbrev=<n>" (which also modifies diff output, if it is displayed)\.

This should make "\-\-pretty=oneline" a whole lot more readable for people using 80\-column terminals\.
.RE
.PP
\-\-encoding[=<encoding>]
.RS 4
The commit objects record the encoding used for the log message in their encoding header; this option can be used to tell the command to re\-code the commit log message in the encoding preferred by the user\. For non plumbing commands this defaults to UTF\-8\.
.RE
.SH "PRETTY FORMATS"
If the commit is a merge, and if the pretty\-format is not \fIoneline\fR, \fIemail\fR or \fIraw\fR, an additional line is inserted before the \fIAuthor:\fR line\. This line begins with "Merge: " and the sha1s of ancestral commits are printed, separated by spaces\. Note that the listed commits may not necessarily be the list of the \fBdirect\fR parent commits if you have limited your view of history: for example, if you are only interested in changes related to a certain directory or file\.

Here are some additional details for each format:

.sp
.RS 4
\h'-04'\(bu\h'+03'\fIoneline\fR

.sp
.RS 4
.nf
<sha1> <title line>
.fi
.RE
This is designed to be as compact as possible\.
.RE
.sp
.RS 4
\h'-04'\(bu\h'+03'\fIshort\fR

.sp
.RS 4
.nf
commit <sha1>
Author: <author>
.fi
.RE
.sp
.RS 4
.nf
<title line>
.fi
.RE
.RE
.sp
.RS 4
\h'-04'\(bu\h'+03'\fImedium\fR

.sp
.RS 4
.nf
commit <sha1>
Author: <author>
Date: <author date>
.fi
.RE
.sp
.RS 4
.nf
<title line>
.fi
.RE
.sp
.RS 4
.nf
<full commit message>
.fi
.RE
.RE
.sp
.RS 4
\h'-04'\(bu\h'+03'\fIfull\fR

.sp
.RS 4
.nf
commit <sha1>
Author: <author>
Commit: <committer>
.fi
.RE
.sp
.RS 4
.nf
<title line>
.fi
.RE
.sp
.RS 4
.nf
<full commit message>
.fi
.RE
.RE
.sp
.RS 4
\h'-04'\(bu\h'+03'\fIfuller\fR

.sp
.RS 4
.nf
commit <sha1>
Author: <author>
AuthorDate: <author date>
Commit: <committer>
CommitDate: <committer date>
.fi
.RE
.sp
.RS 4
.nf
<title line>
.fi
.RE
.sp
.RS 4
.nf
<full commit message>
.fi
.RE
.RE
.sp
.RS 4
\h'-04'\(bu\h'+03'\fIemail\fR

.sp
.RS 4
.nf
From <sha1> <date>
From: <author>
Date: <author date>
Subject: [PATCH] <title line>
.fi
.RE
.sp
.RS 4
.nf
<full commit message>
.fi
.RE
.RE
.sp
.RS 4
\h'-04'\(bu\h'+03'\fIraw\fR

The \fIraw\fR format shows the entire commit exactly as stored in the commit object\. Notably, the SHA1s are displayed in full, regardless of whether \-\-abbrev or \-\-no\-abbrev are used, and \fIparents\fR information show the true parent commits, without taking grafts nor history simplification into account\.
.RE
.sp
.RS 4
\h'-04'\(bu\h'+03'\fIformat:\fR

The \fIformat:\fR format allows you to specify which information you want to show\. It works a little bit like printf format, with the notable exception that you get a newline with \fI%n\fR instead of \fI\en\fR\.

E\.g, \fIformat:"The author of %h was %an, %ar%nThe title was >>%s<<%n"\fR would show something like this:

.sp
.RS 4
.nf

\.ft C
The author of fe6e0ee was Junio C Hamano, 23 hours ago
The title was >>t4119: test autocomputing \-p<n> for traditional diff input\.<<

\.ft

.fi
.RE
The placeholders are:

.sp
.RS 4
\h'-04'\(bu\h'+03'\fI%H\fR: commit hash
.RE
.sp
.RS 4
\h'-04'\(bu\h'+03'\fI%h\fR: abbreviated commit hash
.RE
.sp
.RS 4
\h'-04'\(bu\h'+03'\fI%T\fR: tree hash
.RE
.sp
.RS 4
\h'-04'\(bu\h'+03'\fI%t\fR: abbreviated tree hash
.RE
.sp
.RS 4
\h'-04'\(bu\h'+03'\fI%P\fR: parent hashes
.RE
.sp
.RS 4
\h'-04'\(bu\h'+03'\fI%p\fR: abbreviated parent hashes
.RE
.sp
.RS 4
\h'-04'\(bu\h'+03'\fI%an\fR: author name
.RE
.sp
.RS 4
\h'-04'\(bu\h'+03'\fI%aN\fR: author name (respecting \.mailmap)
.RE
.sp
.RS 4
\h'-04'\(bu\h'+03'\fI%ae\fR: author email
.RE
.sp
.RS 4
\h'-04'\(bu\h'+03'\fI%ad\fR: author date (format respects \-\-date= option)
.RE
.sp
.RS 4
\h'-04'\(bu\h'+03'\fI%aD\fR: author date, RFC2822 style
.RE
.sp
.RS 4
\h'-04'\(bu\h'+03'\fI%ar\fR: author date, relative
.RE
.sp
.RS 4
\h'-04'\(bu\h'+03'\fI%at\fR: author date, UNIX timestamp
.RE
.sp
.RS 4
\h'-04'\(bu\h'+03'\fI%ai\fR: author date, ISO 8601 format
.RE
.sp
.RS 4
\h'-04'\(bu\h'+03'\fI%cn\fR: committer name
.RE
.sp
.RS 4
\h'-04'\(bu\h'+03'\fI%cN\fR: committer name (respecting \.mailmap)
.RE
.sp
.RS 4
\h'-04'\(bu\h'+03'\fI%ce\fR: committer email
.RE
.sp
.RS 4
\h'-04'\(bu\h'+03'\fI%cd\fR: committer date
.RE
.sp
.RS 4
\h'-04'\(bu\h'+03'\fI%cD\fR: committer date, RFC2822 style
.RE
.sp
.RS 4
\h'-04'\(bu\h'+03'\fI%cr\fR: committer date, relative
.RE
.sp
.RS 4
\h'-04'\(bu\h'+03'\fI%ct\fR: committer date, UNIX timestamp
.RE
.sp
.RS 4
\h'-04'\(bu\h'+03'\fI%ci\fR: committer date, ISO 8601 format
.RE
.sp
.RS 4
\h'-04'\(bu\h'+03'\fI%e\fR: encoding
.RE
.sp
.RS 4
\h'-04'\(bu\h'+03'\fI%s\fR: subject
.RE
.sp
.RS 4
\h'-04'\(bu\h'+03'\fI%b\fR: body
.RE
.sp
.RS 4
\h'-04'\(bu\h'+03'\fI%Cred\fR: switch color to red
.RE
.sp
.RS 4
\h'-04'\(bu\h'+03'\fI%Cgreen\fR: switch color to green
.RE
.sp
.RS 4
\h'-04'\(bu\h'+03'\fI%Cblue\fR: switch color to blue
.RE
.sp
.RS 4
\h'-04'\(bu\h'+03'\fI%Creset\fR: reset color
.RE
.sp
.RS 4
\h'-04'\(bu\h'+03'\fI%m\fR: left, right or boundary mark
.RE
.sp
.RS 4
\h'-04'\(bu\h'+03'\fI%n\fR: newline
.RE
.sp
.RS 4
\h'-04'\(bu\h'+03'\fI%x00\fR: print a byte from a hex code
.RE
.RE
.sp
.RS 4
\h'-04'\(bu\h'+03'\fItformat:\fR

The \fItformat:\fR format works exactly like \fIformat:\fR, except that it provides "terminator" semantics instead of "separator" semantics\. In other words, each commit has the message terminator character (usually a newline) appended, rather than a separator placed between entries\. This means that the final entry of a single\-line format will be properly terminated with a new line, just as the "oneline" format does\. For example:

.sp
.RS 4
.nf

\.ft C
$ git log \-2 \-\-pretty=format:%h 4da45bef \e
  | perl \-pe \'$_ \.= " \-\- NO NEWLINE\en" unless /\en/\'
4da45be
7134973 \-\- NO NEWLINE

$ git log \-2 \-\-pretty=tformat:%h 4da45bef \e
  | perl \-pe \'$_ \.= " \-\- NO NEWLINE\en" unless /\en/\'
4da45be
7134973
\.ft

.fi
.RE
.RE
.SH "EXAMPLES"
.PP
git whatchanged \-p v2\.6\.12\.\. include/scsi drivers/scsi
.RS 4
Show as patches the commits since version \fIv2\.6\.12\fR that changed any file in the include/scsi or drivers/scsi subdirectories
.RE
.PP
git whatchanged \-\-since="2 weeks ago" \-\- gitk
.RS 4
Show the changes during the last two weeks to the file \fIgitk\fR\. The "\-\-" is necessary to avoid confusion with the \fBbranch\fR named \fIgitk\fR
.RE
.SH "AUTHOR"
Written by Linus Torvalds <torvalds@osdl\.org> and Junio C Hamano <gitster@pobox\.com>
.SH "DOCUMENTATION"
Documentation by David Greaves, Junio C Hamano and the git\-list <git@vger\.kernel\.org>\.
.SH "GIT"
Part of the \fBgit\fR(1) suite

