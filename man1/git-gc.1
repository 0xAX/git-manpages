.\"     Title: git-gc
.\"    Author: 
.\" Generator: DocBook XSL Stylesheets v1.73.2 <http://docbook.sf.net/>
.\"      Date: 07/06/2008
.\"    Manual: Git Manual
.\"    Source: Git 1.5.6.2.212.g08b5
.\"
.TH "GIT\-GC" "1" "07/06/2008" "Git 1\.5\.6\.2\.212\.g08b5" "Git Manual"
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.SH "NAME"
git-gc - Cleanup unnecessary files and optimize the local repository
.SH "SYNOPSIS"
\fIgit gc\fR [\-\-aggressive] [\-\-auto] [\-\-quiet]
.SH "DESCRIPTION"
Runs a number of housekeeping tasks within the current repository, such as compressing file revisions (to reduce disk space and increase performance) and removing unreachable objects which may have been created from prior invocations of \fIgit\-add\fR\.

Users are encouraged to run this task on a regular basis within each repository to maintain good disk space utilization and good operating performance\.

Some git commands may automatically run \fIgit\-gc\fR; see the \-\-auto flag below for details\. If you know what you\'re doing and all you want is to disable this behavior permanently without further considerations, just do:

.sp
.RS 4
.nf

\.ft C
$ git config \-\-global gc\.auto 0
\.ft

.fi
.RE
.SH "OPTIONS"
.PP
\-\-aggressive
.RS 4
Usually \fIgit\-gc\fR runs very quickly while providing good disk space utilization and performance\. This option will cause \fIgit\-gc\fR to more aggressively optimize the repository at the expense of taking much more time\. The effects of this optimization are persistent, so this option only needs to be used occasionally; every few hundred changesets or so\.
.RE
.PP
\-\-auto
.RS 4
With this option, \fIgit\-gc\fR checks whether any housekeeping is required; if not, it exits without performing any work\. Some git commands run git gc \-\-auto after performing operations that could create many loose objects\.

Housekeeping is required if there are too many loose objects or too many packs in the repository\. If the number of loose objects exceeds the value of the gc\.auto configuration variable, then all loose objects are combined into a single pack using \fIgit\-repack \-d \-l\fR\. Setting the value of gc\.auto to 0 disables automatic packing of loose objects\.

If the number of packs exceeds the value of gc\.autopacklimit, then existing packs (except those marked with a \.keep file) are consolidated into a single pack by using the \-A option of \fIgit\-repack\fR\. Setting gc\.autopacklimit to 0 disables automatic consolidation of packs\.
.RE
.PP
\-\-quiet
.RS 4
Suppress all progress reports\.
.RE
.SH "CONFIGURATION"
The optional configuration variable \fIgc\.reflogExpire\fR can be set to indicate how long historical entries within each branch\'s reflog should remain available in this repository\. The setting is expressed as a length of time, for example \fI90 days\fR or \fI3 months\fR\. It defaults to \fI90 days\fR\.

The optional configuration variable \fIgc\.reflogExpireUnreachable\fR can be set to indicate how long historical reflog entries which are not part of the current branch should remain available in this repository\. These types of entries are generally created as a result of using git commit \-\-amend or git rebase and are the commits prior to the amend or rebase occurring\. Since these changes are not part of the current project most users will want to expire them sooner\. This option defaults to \fI30 days\fR\.

The optional configuration variable \fIgc\.rerereresolved\fR indicates how long records of conflicted merge you resolved earlier are kept\. This defaults to 60 days\.

The optional configuration variable \fIgc\.rerereunresolved\fR indicates how long records of conflicted merge you have not resolved are kept\. This defaults to 15 days\.

The optional configuration variable \fIgc\.packrefs\fR determines if \fIgit\-gc\fR runs \fIgit\-pack\-refs\fR\. This can be set to "nobare" to enable it within all non\-bare repos or it can be set to a boolean value\. This defaults to true\.

The optional configuration variable \fIgc\.aggressiveWindow\fR controls how much time is spent optimizing the delta compression of the objects in the repository when the \-\-aggressive option is specified\. The larger the value, the more time is spent optimizing the delta compression\. See the documentation for the \-\-window\' option in \fBgit-repack\fR(1) for more details\. This defaults to 10\.

The optional configuration variable \fIgc\.pruneExpire\fR controls how old the unreferenced loose objects have to be before they are pruned\. The default is "2 weeks ago"\.
.SH "NOTES"
\fIgit\-gc\fR tries very hard to be safe about the garbage it collects\. In particular, it will keep not only objects referenced by your current set of branches and tags, but also objects referenced by the index, remote tracking branches, refs saved by \fIgit\-filter\-branch\fR in refs/original/, or reflogs (which may references commits in branches that were later amended or rewound)\.

If you are expecting some objects to be collected and they aren\'t, check all of those locations and decide whether it makes sense in your case to remove those references\.
.SH "SEE ALSO"
\fBgit-prune\fR(1) \fBgit-reflog\fR(1) \fBgit-repack\fR(1) \fBgit-rerere\fR(1)
.SH "AUTHOR"
Written by Shawn O\. Pearce <spearce@spearce\.org>
.SH "GIT"
Part of the \fBgit\fR(1) suite

